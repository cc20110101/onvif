/* soapAdvancedSecurityServiceBindingProxy.cpp
   Generated by gSOAP 2.8.45 for onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapAdvancedSecurityServiceBindingProxy.h"

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	AdvancedSecurityServiceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy(const AdvancedSecurityServiceBindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	AdvancedSecurityServiceBindingProxy_init(_soap->imode, _soap->omode);
}

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy(const char *endpoint)
{	this->soap = soap_new();
	this->soap_own = true;
	AdvancedSecurityServiceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	AdvancedSecurityServiceBindingProxy_init(iomode, iomode);
}

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy(const char *endpoint, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	AdvancedSecurityServiceBindingProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	AdvancedSecurityServiceBindingProxy_init(imode, omode);
}

AdvancedSecurityServiceBindingProxy::~AdvancedSecurityServiceBindingProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void AdvancedSecurityServiceBindingProxy::AdvancedSecurityServiceBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"wsa", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL, NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"ns1", "http://www.onvif.org/ver20/analytics/humanface", NULL, NULL},
        {"ns2", "http://www.onvif.org/ver20/analytics/humanbody", NULL, NULL},
        {"ns5", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"ns10", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"ns11", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {"ns12", "http://www.onvif.org/ver10/uplink/wsdl", NULL, NULL},
        {"ns13", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"ns14", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"ns3", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"ns4", "http://www.onvif.org/ver10/authenticationbehavior/wsdl", NULL, NULL},
        {"ns6", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"ns7", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"ns8", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"ns9", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"tas", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"tdn", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
        {"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

#ifndef WITH_PURE_VIRTUAL
AdvancedSecurityServiceBindingProxy *AdvancedSecurityServiceBindingProxy::copy()
{	AdvancedSecurityServiceBindingProxy *dup = SOAP_NEW_COPY(AdvancedSecurityServiceBindingProxy);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}
#endif

AdvancedSecurityServiceBindingProxy& AdvancedSecurityServiceBindingProxy::operator=(const AdvancedSecurityServiceBindingProxy& rhs)
{	if (this->soap_own)
		soap_free(this->soap);
	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
	return *this;
}

void AdvancedSecurityServiceBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void AdvancedSecurityServiceBindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	AdvancedSecurityServiceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void AdvancedSecurityServiceBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void AdvancedSecurityServiceBindingProxy::soap_header(char *wsa__MessageID, struct wsa__Relationship *wsa__RelatesTo, struct wsa__EndpointReferenceType *wsa__From, struct wsa__EndpointReferenceType *wsa__ReplyTo, struct wsa__EndpointReferenceType *wsa__FaultTo, char *wsa__To, char *wsa__Action, struct wsdd__AppSequenceType *wsdd__AppSequence, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security)
{	::soap_header(this->soap);
	this->soap->header->wsa__MessageID = wsa__MessageID;
	this->soap->header->wsa__RelatesTo = wsa__RelatesTo;
	this->soap->header->wsa__From = wsa__From;
	this->soap->header->wsa__ReplyTo = wsa__ReplyTo;
	this->soap->header->wsa__FaultTo = wsa__FaultTo;
	this->soap->header->wsa__To = wsa__To;
	this->soap->header->wsa__Action = wsa__Action;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsse__Security = wsse__Security;
}

::SOAP_ENV__Header *AdvancedSecurityServiceBindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *AdvancedSecurityServiceBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *AdvancedSecurityServiceBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *AdvancedSecurityServiceBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int AdvancedSecurityServiceBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int AdvancedSecurityServiceBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void AdvancedSecurityServiceBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void AdvancedSecurityServiceBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *AdvancedSecurityServiceBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int AdvancedSecurityServiceBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _tas__GetServiceCapabilities *tas__GetServiceCapabilities, _tas__GetServiceCapabilitiesResponse &tas__GetServiceCapabilitiesResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetServiceCapabilities soap_tmp___tas__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetServiceCapabilities";
	soap_tmp___tas__GetServiceCapabilities.tas__GetServiceCapabilities = tas__GetServiceCapabilities;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetServiceCapabilities(soap, &soap_tmp___tas__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetServiceCapabilities(soap, &soap_tmp___tas__GetServiceCapabilities, "-tas:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetServiceCapabilities(soap, &soap_tmp___tas__GetServiceCapabilities, "-tas:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetServiceCapabilitiesResponse*>(&tas__GetServiceCapabilitiesResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetServiceCapabilitiesResponse.soap_get(soap, "tas:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::CreateRSAKeyPair(const char *endpoint, const char *soap_action, _tas__CreateRSAKeyPair *tas__CreateRSAKeyPair, _tas__CreateRSAKeyPairResponse &tas__CreateRSAKeyPairResponse)
{	struct soap *soap = this->soap;
	struct __tas__CreateRSAKeyPair soap_tmp___tas__CreateRSAKeyPair;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateRSAKeyPair";
	soap_tmp___tas__CreateRSAKeyPair.tas__CreateRSAKeyPair = tas__CreateRSAKeyPair;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__CreateRSAKeyPair(soap, &soap_tmp___tas__CreateRSAKeyPair);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__CreateRSAKeyPair(soap, &soap_tmp___tas__CreateRSAKeyPair, "-tas:CreateRSAKeyPair", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__CreateRSAKeyPair(soap, &soap_tmp___tas__CreateRSAKeyPair, "-tas:CreateRSAKeyPair", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__CreateRSAKeyPairResponse*>(&tas__CreateRSAKeyPairResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__CreateRSAKeyPairResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__CreateRSAKeyPairResponse.soap_get(soap, "tas:CreateRSAKeyPairResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::UploadKeyPairInPKCS8(const char *endpoint, const char *soap_action, _tas__UploadKeyPairInPKCS8 *tas__UploadKeyPairInPKCS8, _tas__UploadKeyPairInPKCS8Response &tas__UploadKeyPairInPKCS8Response)
{	struct soap *soap = this->soap;
	struct __tas__UploadKeyPairInPKCS8 soap_tmp___tas__UploadKeyPairInPKCS8;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadKeyPairInPKCS8";
	soap_tmp___tas__UploadKeyPairInPKCS8.tas__UploadKeyPairInPKCS8 = tas__UploadKeyPairInPKCS8;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__UploadKeyPairInPKCS8(soap, &soap_tmp___tas__UploadKeyPairInPKCS8);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__UploadKeyPairInPKCS8(soap, &soap_tmp___tas__UploadKeyPairInPKCS8, "-tas:UploadKeyPairInPKCS8", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__UploadKeyPairInPKCS8(soap, &soap_tmp___tas__UploadKeyPairInPKCS8, "-tas:UploadKeyPairInPKCS8", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__UploadKeyPairInPKCS8Response*>(&tas__UploadKeyPairInPKCS8Response)) // NULL ref?
		return soap_closesock(soap);
	tas__UploadKeyPairInPKCS8Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__UploadKeyPairInPKCS8Response.soap_get(soap, "tas:UploadKeyPairInPKCS8Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::UploadCertificateWithPrivateKeyInPKCS12(const char *endpoint, const char *soap_action, _tas__UploadCertificateWithPrivateKeyInPKCS12 *tas__UploadCertificateWithPrivateKeyInPKCS12, _tas__UploadCertificateWithPrivateKeyInPKCS12Response &tas__UploadCertificateWithPrivateKeyInPKCS12Response)
{	struct soap *soap = this->soap;
	struct __tas__UploadCertificateWithPrivateKeyInPKCS12 soap_tmp___tas__UploadCertificateWithPrivateKeyInPKCS12;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCertificateWithPrivateKeyInPKCS12";
	soap_tmp___tas__UploadCertificateWithPrivateKeyInPKCS12.tas__UploadCertificateWithPrivateKeyInPKCS12 = tas__UploadCertificateWithPrivateKeyInPKCS12;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__UploadCertificateWithPrivateKeyInPKCS12(soap, &soap_tmp___tas__UploadCertificateWithPrivateKeyInPKCS12);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__UploadCertificateWithPrivateKeyInPKCS12(soap, &soap_tmp___tas__UploadCertificateWithPrivateKeyInPKCS12, "-tas:UploadCertificateWithPrivateKeyInPKCS12", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__UploadCertificateWithPrivateKeyInPKCS12(soap, &soap_tmp___tas__UploadCertificateWithPrivateKeyInPKCS12, "-tas:UploadCertificateWithPrivateKeyInPKCS12", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__UploadCertificateWithPrivateKeyInPKCS12Response*>(&tas__UploadCertificateWithPrivateKeyInPKCS12Response)) // NULL ref?
		return soap_closesock(soap);
	tas__UploadCertificateWithPrivateKeyInPKCS12Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__UploadCertificateWithPrivateKeyInPKCS12Response.soap_get(soap, "tas:UploadCertificateWithPrivateKeyInPKCS12Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetKeyStatus(const char *endpoint, const char *soap_action, _tas__GetKeyStatus *tas__GetKeyStatus, _tas__GetKeyStatusResponse &tas__GetKeyStatusResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetKeyStatus soap_tmp___tas__GetKeyStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetKeyStatus";
	soap_tmp___tas__GetKeyStatus.tas__GetKeyStatus = tas__GetKeyStatus;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetKeyStatus(soap, &soap_tmp___tas__GetKeyStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetKeyStatus(soap, &soap_tmp___tas__GetKeyStatus, "-tas:GetKeyStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetKeyStatus(soap, &soap_tmp___tas__GetKeyStatus, "-tas:GetKeyStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetKeyStatusResponse*>(&tas__GetKeyStatusResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetKeyStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetKeyStatusResponse.soap_get(soap, "tas:GetKeyStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetPrivateKeyStatus(const char *endpoint, const char *soap_action, _tas__GetPrivateKeyStatus *tas__GetPrivateKeyStatus, _tas__GetPrivateKeyStatusResponse &tas__GetPrivateKeyStatusResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetPrivateKeyStatus soap_tmp___tas__GetPrivateKeyStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetPrivateKeyStatus";
	soap_tmp___tas__GetPrivateKeyStatus.tas__GetPrivateKeyStatus = tas__GetPrivateKeyStatus;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetPrivateKeyStatus(soap, &soap_tmp___tas__GetPrivateKeyStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetPrivateKeyStatus(soap, &soap_tmp___tas__GetPrivateKeyStatus, "-tas:GetPrivateKeyStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetPrivateKeyStatus(soap, &soap_tmp___tas__GetPrivateKeyStatus, "-tas:GetPrivateKeyStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetPrivateKeyStatusResponse*>(&tas__GetPrivateKeyStatusResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetPrivateKeyStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetPrivateKeyStatusResponse.soap_get(soap, "tas:GetPrivateKeyStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetAllKeys(const char *endpoint, const char *soap_action, _tas__GetAllKeys *tas__GetAllKeys, _tas__GetAllKeysResponse &tas__GetAllKeysResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetAllKeys soap_tmp___tas__GetAllKeys;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllKeys";
	soap_tmp___tas__GetAllKeys.tas__GetAllKeys = tas__GetAllKeys;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetAllKeys(soap, &soap_tmp___tas__GetAllKeys);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetAllKeys(soap, &soap_tmp___tas__GetAllKeys, "-tas:GetAllKeys", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetAllKeys(soap, &soap_tmp___tas__GetAllKeys, "-tas:GetAllKeys", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetAllKeysResponse*>(&tas__GetAllKeysResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetAllKeysResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetAllKeysResponse.soap_get(soap, "tas:GetAllKeysResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::DeleteKey(const char *endpoint, const char *soap_action, _tas__DeleteKey *tas__DeleteKey, _tas__DeleteKeyResponse &tas__DeleteKeyResponse)
{	struct soap *soap = this->soap;
	struct __tas__DeleteKey soap_tmp___tas__DeleteKey;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteKey";
	soap_tmp___tas__DeleteKey.tas__DeleteKey = tas__DeleteKey;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__DeleteKey(soap, &soap_tmp___tas__DeleteKey);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__DeleteKey(soap, &soap_tmp___tas__DeleteKey, "-tas:DeleteKey", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__DeleteKey(soap, &soap_tmp___tas__DeleteKey, "-tas:DeleteKey", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__DeleteKeyResponse*>(&tas__DeleteKeyResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__DeleteKeyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__DeleteKeyResponse.soap_get(soap, "tas:DeleteKeyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::CreatePKCS10CSR(const char *endpoint, const char *soap_action, _tas__CreatePKCS10CSR *tas__CreatePKCS10CSR, _tas__CreatePKCS10CSRResponse &tas__CreatePKCS10CSRResponse)
{	struct soap *soap = this->soap;
	struct __tas__CreatePKCS10CSR soap_tmp___tas__CreatePKCS10CSR;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreatePKCS10CSR";
	soap_tmp___tas__CreatePKCS10CSR.tas__CreatePKCS10CSR = tas__CreatePKCS10CSR;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__CreatePKCS10CSR(soap, &soap_tmp___tas__CreatePKCS10CSR);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__CreatePKCS10CSR(soap, &soap_tmp___tas__CreatePKCS10CSR, "-tas:CreatePKCS10CSR", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__CreatePKCS10CSR(soap, &soap_tmp___tas__CreatePKCS10CSR, "-tas:CreatePKCS10CSR", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__CreatePKCS10CSRResponse*>(&tas__CreatePKCS10CSRResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__CreatePKCS10CSRResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__CreatePKCS10CSRResponse.soap_get(soap, "tas:CreatePKCS10CSRResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::CreateSelfSignedCertificate(const char *endpoint, const char *soap_action, _tas__CreateSelfSignedCertificate *tas__CreateSelfSignedCertificate, _tas__CreateSelfSignedCertificateResponse &tas__CreateSelfSignedCertificateResponse)
{	struct soap *soap = this->soap;
	struct __tas__CreateSelfSignedCertificate soap_tmp___tas__CreateSelfSignedCertificate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateSelfSignedCertificate";
	soap_tmp___tas__CreateSelfSignedCertificate.tas__CreateSelfSignedCertificate = tas__CreateSelfSignedCertificate;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__CreateSelfSignedCertificate(soap, &soap_tmp___tas__CreateSelfSignedCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__CreateSelfSignedCertificate(soap, &soap_tmp___tas__CreateSelfSignedCertificate, "-tas:CreateSelfSignedCertificate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__CreateSelfSignedCertificate(soap, &soap_tmp___tas__CreateSelfSignedCertificate, "-tas:CreateSelfSignedCertificate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__CreateSelfSignedCertificateResponse*>(&tas__CreateSelfSignedCertificateResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__CreateSelfSignedCertificateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__CreateSelfSignedCertificateResponse.soap_get(soap, "tas:CreateSelfSignedCertificateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::UploadCertificate(const char *endpoint, const char *soap_action, _tas__UploadCertificate *tas__UploadCertificate, _tas__UploadCertificateResponse &tas__UploadCertificateResponse)
{	struct soap *soap = this->soap;
	struct __tas__UploadCertificate soap_tmp___tas__UploadCertificate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCertificate";
	soap_tmp___tas__UploadCertificate.tas__UploadCertificate = tas__UploadCertificate;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__UploadCertificate(soap, &soap_tmp___tas__UploadCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__UploadCertificate(soap, &soap_tmp___tas__UploadCertificate, "-tas:UploadCertificate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__UploadCertificate(soap, &soap_tmp___tas__UploadCertificate, "-tas:UploadCertificate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__UploadCertificateResponse*>(&tas__UploadCertificateResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__UploadCertificateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__UploadCertificateResponse.soap_get(soap, "tas:UploadCertificateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetCertificate(const char *endpoint, const char *soap_action, _tas__GetCertificate *tas__GetCertificate, _tas__GetCertificateResponse &tas__GetCertificateResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetCertificate soap_tmp___tas__GetCertificate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertificate";
	soap_tmp___tas__GetCertificate.tas__GetCertificate = tas__GetCertificate;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetCertificate(soap, &soap_tmp___tas__GetCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetCertificate(soap, &soap_tmp___tas__GetCertificate, "-tas:GetCertificate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetCertificate(soap, &soap_tmp___tas__GetCertificate, "-tas:GetCertificate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetCertificateResponse*>(&tas__GetCertificateResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetCertificateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetCertificateResponse.soap_get(soap, "tas:GetCertificateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetAllCertificates(const char *endpoint, const char *soap_action, _tas__GetAllCertificates *tas__GetAllCertificates, _tas__GetAllCertificatesResponse &tas__GetAllCertificatesResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetAllCertificates soap_tmp___tas__GetAllCertificates;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertificates";
	soap_tmp___tas__GetAllCertificates.tas__GetAllCertificates = tas__GetAllCertificates;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetAllCertificates(soap, &soap_tmp___tas__GetAllCertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetAllCertificates(soap, &soap_tmp___tas__GetAllCertificates, "-tas:GetAllCertificates", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetAllCertificates(soap, &soap_tmp___tas__GetAllCertificates, "-tas:GetAllCertificates", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetAllCertificatesResponse*>(&tas__GetAllCertificatesResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetAllCertificatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetAllCertificatesResponse.soap_get(soap, "tas:GetAllCertificatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::DeleteCertificate(const char *endpoint, const char *soap_action, _tas__DeleteCertificate *tas__DeleteCertificate, _tas__DeleteCertificateResponse &tas__DeleteCertificateResponse)
{	struct soap *soap = this->soap;
	struct __tas__DeleteCertificate soap_tmp___tas__DeleteCertificate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertificate";
	soap_tmp___tas__DeleteCertificate.tas__DeleteCertificate = tas__DeleteCertificate;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__DeleteCertificate(soap, &soap_tmp___tas__DeleteCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__DeleteCertificate(soap, &soap_tmp___tas__DeleteCertificate, "-tas:DeleteCertificate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__DeleteCertificate(soap, &soap_tmp___tas__DeleteCertificate, "-tas:DeleteCertificate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__DeleteCertificateResponse*>(&tas__DeleteCertificateResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__DeleteCertificateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__DeleteCertificateResponse.soap_get(soap, "tas:DeleteCertificateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::CreateCertificationPath(const char *endpoint, const char *soap_action, _tas__CreateCertificationPath *tas__CreateCertificationPath, _tas__CreateCertificationPathResponse &tas__CreateCertificationPathResponse)
{	struct soap *soap = this->soap;
	struct __tas__CreateCertificationPath soap_tmp___tas__CreateCertificationPath;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateCertificationPath";
	soap_tmp___tas__CreateCertificationPath.tas__CreateCertificationPath = tas__CreateCertificationPath;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__CreateCertificationPath(soap, &soap_tmp___tas__CreateCertificationPath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__CreateCertificationPath(soap, &soap_tmp___tas__CreateCertificationPath, "-tas:CreateCertificationPath", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__CreateCertificationPath(soap, &soap_tmp___tas__CreateCertificationPath, "-tas:CreateCertificationPath", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__CreateCertificationPathResponse*>(&tas__CreateCertificationPathResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__CreateCertificationPathResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__CreateCertificationPathResponse.soap_get(soap, "tas:CreateCertificationPathResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetCertificationPath(const char *endpoint, const char *soap_action, _tas__GetCertificationPath *tas__GetCertificationPath, _tas__GetCertificationPathResponse &tas__GetCertificationPathResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetCertificationPath soap_tmp___tas__GetCertificationPath;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertificationPath";
	soap_tmp___tas__GetCertificationPath.tas__GetCertificationPath = tas__GetCertificationPath;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetCertificationPath(soap, &soap_tmp___tas__GetCertificationPath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetCertificationPath(soap, &soap_tmp___tas__GetCertificationPath, "-tas:GetCertificationPath", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetCertificationPath(soap, &soap_tmp___tas__GetCertificationPath, "-tas:GetCertificationPath", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetCertificationPathResponse*>(&tas__GetCertificationPathResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetCertificationPathResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetCertificationPathResponse.soap_get(soap, "tas:GetCertificationPathResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetAllCertificationPaths(const char *endpoint, const char *soap_action, _tas__GetAllCertificationPaths *tas__GetAllCertificationPaths, _tas__GetAllCertificationPathsResponse &tas__GetAllCertificationPathsResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetAllCertificationPaths soap_tmp___tas__GetAllCertificationPaths;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertificationPaths";
	soap_tmp___tas__GetAllCertificationPaths.tas__GetAllCertificationPaths = tas__GetAllCertificationPaths;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetAllCertificationPaths(soap, &soap_tmp___tas__GetAllCertificationPaths);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetAllCertificationPaths(soap, &soap_tmp___tas__GetAllCertificationPaths, "-tas:GetAllCertificationPaths", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetAllCertificationPaths(soap, &soap_tmp___tas__GetAllCertificationPaths, "-tas:GetAllCertificationPaths", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetAllCertificationPathsResponse*>(&tas__GetAllCertificationPathsResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetAllCertificationPathsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetAllCertificationPathsResponse.soap_get(soap, "tas:GetAllCertificationPathsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::DeleteCertificationPath(const char *endpoint, const char *soap_action, _tas__DeleteCertificationPath *tas__DeleteCertificationPath, _tas__DeleteCertificationPathResponse &tas__DeleteCertificationPathResponse)
{	struct soap *soap = this->soap;
	struct __tas__DeleteCertificationPath soap_tmp___tas__DeleteCertificationPath;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertificationPath";
	soap_tmp___tas__DeleteCertificationPath.tas__DeleteCertificationPath = tas__DeleteCertificationPath;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__DeleteCertificationPath(soap, &soap_tmp___tas__DeleteCertificationPath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__DeleteCertificationPath(soap, &soap_tmp___tas__DeleteCertificationPath, "-tas:DeleteCertificationPath", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__DeleteCertificationPath(soap, &soap_tmp___tas__DeleteCertificationPath, "-tas:DeleteCertificationPath", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__DeleteCertificationPathResponse*>(&tas__DeleteCertificationPathResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__DeleteCertificationPathResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__DeleteCertificationPathResponse.soap_get(soap, "tas:DeleteCertificationPathResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::UploadPassphrase(const char *endpoint, const char *soap_action, _tas__UploadPassphrase *tas__UploadPassphrase, _tas__UploadPassphraseResponse &tas__UploadPassphraseResponse)
{	struct soap *soap = this->soap;
	struct __tas__UploadPassphrase soap_tmp___tas__UploadPassphrase;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadPassphrase";
	soap_tmp___tas__UploadPassphrase.tas__UploadPassphrase = tas__UploadPassphrase;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__UploadPassphrase(soap, &soap_tmp___tas__UploadPassphrase);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__UploadPassphrase(soap, &soap_tmp___tas__UploadPassphrase, "-tas:UploadPassphrase", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__UploadPassphrase(soap, &soap_tmp___tas__UploadPassphrase, "-tas:UploadPassphrase", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__UploadPassphraseResponse*>(&tas__UploadPassphraseResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__UploadPassphraseResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__UploadPassphraseResponse.soap_get(soap, "tas:UploadPassphraseResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetAllPassphrases(const char *endpoint, const char *soap_action, _tas__GetAllPassphrases *tas__GetAllPassphrases, _tas__GetAllPassphrasesResponse &tas__GetAllPassphrasesResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetAllPassphrases soap_tmp___tas__GetAllPassphrases;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllPassphrases";
	soap_tmp___tas__GetAllPassphrases.tas__GetAllPassphrases = tas__GetAllPassphrases;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetAllPassphrases(soap, &soap_tmp___tas__GetAllPassphrases);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetAllPassphrases(soap, &soap_tmp___tas__GetAllPassphrases, "-tas:GetAllPassphrases", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetAllPassphrases(soap, &soap_tmp___tas__GetAllPassphrases, "-tas:GetAllPassphrases", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetAllPassphrasesResponse*>(&tas__GetAllPassphrasesResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetAllPassphrasesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetAllPassphrasesResponse.soap_get(soap, "tas:GetAllPassphrasesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::DeletePassphrase(const char *endpoint, const char *soap_action, _tas__DeletePassphrase *tas__DeletePassphrase, _tas__DeletePassphraseResponse &tas__DeletePassphraseResponse)
{	struct soap *soap = this->soap;
	struct __tas__DeletePassphrase soap_tmp___tas__DeletePassphrase;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeletePassphrase";
	soap_tmp___tas__DeletePassphrase.tas__DeletePassphrase = tas__DeletePassphrase;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__DeletePassphrase(soap, &soap_tmp___tas__DeletePassphrase);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__DeletePassphrase(soap, &soap_tmp___tas__DeletePassphrase, "-tas:DeletePassphrase", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__DeletePassphrase(soap, &soap_tmp___tas__DeletePassphrase, "-tas:DeletePassphrase", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__DeletePassphraseResponse*>(&tas__DeletePassphraseResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__DeletePassphraseResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__DeletePassphraseResponse.soap_get(soap, "tas:DeletePassphraseResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::UploadCRL(const char *endpoint, const char *soap_action, _tas__UploadCRL *tas__UploadCRL, _tas__UploadCRLResponse &tas__UploadCRLResponse)
{	struct soap *soap = this->soap;
	struct __tas__UploadCRL soap_tmp___tas__UploadCRL;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCRL";
	soap_tmp___tas__UploadCRL.tas__UploadCRL = tas__UploadCRL;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__UploadCRL(soap, &soap_tmp___tas__UploadCRL);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__UploadCRL(soap, &soap_tmp___tas__UploadCRL, "-tas:UploadCRL", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__UploadCRL(soap, &soap_tmp___tas__UploadCRL, "-tas:UploadCRL", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__UploadCRLResponse*>(&tas__UploadCRLResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__UploadCRLResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__UploadCRLResponse.soap_get(soap, "tas:UploadCRLResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetCRL(const char *endpoint, const char *soap_action, _tas__GetCRL *tas__GetCRL, _tas__GetCRLResponse &tas__GetCRLResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetCRL soap_tmp___tas__GetCRL;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCRL";
	soap_tmp___tas__GetCRL.tas__GetCRL = tas__GetCRL;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetCRL(soap, &soap_tmp___tas__GetCRL);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetCRL(soap, &soap_tmp___tas__GetCRL, "-tas:GetCRL", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetCRL(soap, &soap_tmp___tas__GetCRL, "-tas:GetCRL", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetCRLResponse*>(&tas__GetCRLResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetCRLResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetCRLResponse.soap_get(soap, "tas:GetCRLResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetAllCRLs(const char *endpoint, const char *soap_action, _tas__GetAllCRLs *tas__GetAllCRLs, _tas__GetAllCRLsResponse &tas__GetAllCRLsResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetAllCRLs soap_tmp___tas__GetAllCRLs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCRLs";
	soap_tmp___tas__GetAllCRLs.tas__GetAllCRLs = tas__GetAllCRLs;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetAllCRLs(soap, &soap_tmp___tas__GetAllCRLs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetAllCRLs(soap, &soap_tmp___tas__GetAllCRLs, "-tas:GetAllCRLs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetAllCRLs(soap, &soap_tmp___tas__GetAllCRLs, "-tas:GetAllCRLs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetAllCRLsResponse*>(&tas__GetAllCRLsResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetAllCRLsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetAllCRLsResponse.soap_get(soap, "tas:GetAllCRLsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::DeleteCRL(const char *endpoint, const char *soap_action, _tas__DeleteCRL *tas__DeleteCRL, _tas__DeleteCRLResponse &tas__DeleteCRLResponse)
{	struct soap *soap = this->soap;
	struct __tas__DeleteCRL soap_tmp___tas__DeleteCRL;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCRL";
	soap_tmp___tas__DeleteCRL.tas__DeleteCRL = tas__DeleteCRL;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__DeleteCRL(soap, &soap_tmp___tas__DeleteCRL);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__DeleteCRL(soap, &soap_tmp___tas__DeleteCRL, "-tas:DeleteCRL", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__DeleteCRL(soap, &soap_tmp___tas__DeleteCRL, "-tas:DeleteCRL", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__DeleteCRLResponse*>(&tas__DeleteCRLResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__DeleteCRLResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__DeleteCRLResponse.soap_get(soap, "tas:DeleteCRLResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::CreateCertPathValidationPolicy(const char *endpoint, const char *soap_action, _tas__CreateCertPathValidationPolicy *tas__CreateCertPathValidationPolicy, _tas__CreateCertPathValidationPolicyResponse &tas__CreateCertPathValidationPolicyResponse)
{	struct soap *soap = this->soap;
	struct __tas__CreateCertPathValidationPolicy soap_tmp___tas__CreateCertPathValidationPolicy;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateCertPathValidationPolicy";
	soap_tmp___tas__CreateCertPathValidationPolicy.tas__CreateCertPathValidationPolicy = tas__CreateCertPathValidationPolicy;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__CreateCertPathValidationPolicy(soap, &soap_tmp___tas__CreateCertPathValidationPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__CreateCertPathValidationPolicy(soap, &soap_tmp___tas__CreateCertPathValidationPolicy, "-tas:CreateCertPathValidationPolicy", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__CreateCertPathValidationPolicy(soap, &soap_tmp___tas__CreateCertPathValidationPolicy, "-tas:CreateCertPathValidationPolicy", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__CreateCertPathValidationPolicyResponse*>(&tas__CreateCertPathValidationPolicyResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__CreateCertPathValidationPolicyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__CreateCertPathValidationPolicyResponse.soap_get(soap, "tas:CreateCertPathValidationPolicyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetCertPathValidationPolicy(const char *endpoint, const char *soap_action, _tas__GetCertPathValidationPolicy *tas__GetCertPathValidationPolicy, _tas__GetCertPathValidationPolicyResponse &tas__GetCertPathValidationPolicyResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetCertPathValidationPolicy soap_tmp___tas__GetCertPathValidationPolicy;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertPathValidationPolicy";
	soap_tmp___tas__GetCertPathValidationPolicy.tas__GetCertPathValidationPolicy = tas__GetCertPathValidationPolicy;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetCertPathValidationPolicy(soap, &soap_tmp___tas__GetCertPathValidationPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetCertPathValidationPolicy(soap, &soap_tmp___tas__GetCertPathValidationPolicy, "-tas:GetCertPathValidationPolicy", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetCertPathValidationPolicy(soap, &soap_tmp___tas__GetCertPathValidationPolicy, "-tas:GetCertPathValidationPolicy", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetCertPathValidationPolicyResponse*>(&tas__GetCertPathValidationPolicyResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetCertPathValidationPolicyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetCertPathValidationPolicyResponse.soap_get(soap, "tas:GetCertPathValidationPolicyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetAllCertPathValidationPolicies(const char *endpoint, const char *soap_action, _tas__GetAllCertPathValidationPolicies *tas__GetAllCertPathValidationPolicies, _tas__GetAllCertPathValidationPoliciesResponse &tas__GetAllCertPathValidationPoliciesResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetAllCertPathValidationPolicies soap_tmp___tas__GetAllCertPathValidationPolicies;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertPathValidationPolicies";
	soap_tmp___tas__GetAllCertPathValidationPolicies.tas__GetAllCertPathValidationPolicies = tas__GetAllCertPathValidationPolicies;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetAllCertPathValidationPolicies(soap, &soap_tmp___tas__GetAllCertPathValidationPolicies);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetAllCertPathValidationPolicies(soap, &soap_tmp___tas__GetAllCertPathValidationPolicies, "-tas:GetAllCertPathValidationPolicies", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetAllCertPathValidationPolicies(soap, &soap_tmp___tas__GetAllCertPathValidationPolicies, "-tas:GetAllCertPathValidationPolicies", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetAllCertPathValidationPoliciesResponse*>(&tas__GetAllCertPathValidationPoliciesResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetAllCertPathValidationPoliciesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetAllCertPathValidationPoliciesResponse.soap_get(soap, "tas:GetAllCertPathValidationPoliciesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::DeleteCertPathValidationPolicy(const char *endpoint, const char *soap_action, _tas__DeleteCertPathValidationPolicy *tas__DeleteCertPathValidationPolicy, _tas__DeleteCertPathValidationPolicyResponse &tas__DeleteCertPathValidationPolicyResponse)
{	struct soap *soap = this->soap;
	struct __tas__DeleteCertPathValidationPolicy soap_tmp___tas__DeleteCertPathValidationPolicy;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertPathValidationPolicy";
	soap_tmp___tas__DeleteCertPathValidationPolicy.tas__DeleteCertPathValidationPolicy = tas__DeleteCertPathValidationPolicy;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__DeleteCertPathValidationPolicy(soap, &soap_tmp___tas__DeleteCertPathValidationPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__DeleteCertPathValidationPolicy(soap, &soap_tmp___tas__DeleteCertPathValidationPolicy, "-tas:DeleteCertPathValidationPolicy", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__DeleteCertPathValidationPolicy(soap, &soap_tmp___tas__DeleteCertPathValidationPolicy, "-tas:DeleteCertPathValidationPolicy", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__DeleteCertPathValidationPolicyResponse*>(&tas__DeleteCertPathValidationPolicyResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__DeleteCertPathValidationPolicyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__DeleteCertPathValidationPolicyResponse.soap_get(soap, "tas:DeleteCertPathValidationPolicyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::AddServerCertificateAssignment(const char *endpoint, const char *soap_action, _tas__AddServerCertificateAssignment *tas__AddServerCertificateAssignment, _tas__AddServerCertificateAssignmentResponse &tas__AddServerCertificateAssignmentResponse)
{	struct soap *soap = this->soap;
	struct __tas__AddServerCertificateAssignment soap_tmp___tas__AddServerCertificateAssignment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/AddServerCertificateAssignment";
	soap_tmp___tas__AddServerCertificateAssignment.tas__AddServerCertificateAssignment = tas__AddServerCertificateAssignment;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__AddServerCertificateAssignment(soap, &soap_tmp___tas__AddServerCertificateAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__AddServerCertificateAssignment(soap, &soap_tmp___tas__AddServerCertificateAssignment, "-tas:AddServerCertificateAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__AddServerCertificateAssignment(soap, &soap_tmp___tas__AddServerCertificateAssignment, "-tas:AddServerCertificateAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__AddServerCertificateAssignmentResponse*>(&tas__AddServerCertificateAssignmentResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__AddServerCertificateAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__AddServerCertificateAssignmentResponse.soap_get(soap, "tas:AddServerCertificateAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::RemoveServerCertificateAssignment(const char *endpoint, const char *soap_action, _tas__RemoveServerCertificateAssignment *tas__RemoveServerCertificateAssignment, _tas__RemoveServerCertificateAssignmentResponse &tas__RemoveServerCertificateAssignmentResponse)
{	struct soap *soap = this->soap;
	struct __tas__RemoveServerCertificateAssignment soap_tmp___tas__RemoveServerCertificateAssignment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/RemoveServerCertificateAssignment";
	soap_tmp___tas__RemoveServerCertificateAssignment.tas__RemoveServerCertificateAssignment = tas__RemoveServerCertificateAssignment;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__RemoveServerCertificateAssignment(soap, &soap_tmp___tas__RemoveServerCertificateAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__RemoveServerCertificateAssignment(soap, &soap_tmp___tas__RemoveServerCertificateAssignment, "-tas:RemoveServerCertificateAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__RemoveServerCertificateAssignment(soap, &soap_tmp___tas__RemoveServerCertificateAssignment, "-tas:RemoveServerCertificateAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__RemoveServerCertificateAssignmentResponse*>(&tas__RemoveServerCertificateAssignmentResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__RemoveServerCertificateAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__RemoveServerCertificateAssignmentResponse.soap_get(soap, "tas:RemoveServerCertificateAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::ReplaceServerCertificateAssignment(const char *endpoint, const char *soap_action, _tas__ReplaceServerCertificateAssignment *tas__ReplaceServerCertificateAssignment, _tas__ReplaceServerCertificateAssignmentResponse &tas__ReplaceServerCertificateAssignmentResponse)
{	struct soap *soap = this->soap;
	struct __tas__ReplaceServerCertificateAssignment soap_tmp___tas__ReplaceServerCertificateAssignment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/ReplaceServerCertificateAssignment";
	soap_tmp___tas__ReplaceServerCertificateAssignment.tas__ReplaceServerCertificateAssignment = tas__ReplaceServerCertificateAssignment;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__ReplaceServerCertificateAssignment(soap, &soap_tmp___tas__ReplaceServerCertificateAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__ReplaceServerCertificateAssignment(soap, &soap_tmp___tas__ReplaceServerCertificateAssignment, "-tas:ReplaceServerCertificateAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__ReplaceServerCertificateAssignment(soap, &soap_tmp___tas__ReplaceServerCertificateAssignment, "-tas:ReplaceServerCertificateAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__ReplaceServerCertificateAssignmentResponse*>(&tas__ReplaceServerCertificateAssignmentResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__ReplaceServerCertificateAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__ReplaceServerCertificateAssignmentResponse.soap_get(soap, "tas:ReplaceServerCertificateAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetAssignedServerCertificates(const char *endpoint, const char *soap_action, _tas__GetAssignedServerCertificates *tas__GetAssignedServerCertificates, _tas__GetAssignedServerCertificatesResponse &tas__GetAssignedServerCertificatesResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetAssignedServerCertificates soap_tmp___tas__GetAssignedServerCertificates;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAssignedServerCertificates";
	soap_tmp___tas__GetAssignedServerCertificates.tas__GetAssignedServerCertificates = tas__GetAssignedServerCertificates;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetAssignedServerCertificates(soap, &soap_tmp___tas__GetAssignedServerCertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetAssignedServerCertificates(soap, &soap_tmp___tas__GetAssignedServerCertificates, "-tas:GetAssignedServerCertificates", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetAssignedServerCertificates(soap, &soap_tmp___tas__GetAssignedServerCertificates, "-tas:GetAssignedServerCertificates", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetAssignedServerCertificatesResponse*>(&tas__GetAssignedServerCertificatesResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetAssignedServerCertificatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetAssignedServerCertificatesResponse.soap_get(soap, "tas:GetAssignedServerCertificatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::SetEnabledTLSVersions(const char *endpoint, const char *soap_action, _tas__SetEnabledTLSVersions *tas__SetEnabledTLSVersions, _tas__SetEnabledTLSVersionsResponse &tas__SetEnabledTLSVersionsResponse)
{	struct soap *soap = this->soap;
	struct __tas__SetEnabledTLSVersions soap_tmp___tas__SetEnabledTLSVersions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/SetEnabledTLSVersions";
	soap_tmp___tas__SetEnabledTLSVersions.tas__SetEnabledTLSVersions = tas__SetEnabledTLSVersions;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__SetEnabledTLSVersions(soap, &soap_tmp___tas__SetEnabledTLSVersions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__SetEnabledTLSVersions(soap, &soap_tmp___tas__SetEnabledTLSVersions, "-tas:SetEnabledTLSVersions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__SetEnabledTLSVersions(soap, &soap_tmp___tas__SetEnabledTLSVersions, "-tas:SetEnabledTLSVersions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__SetEnabledTLSVersionsResponse*>(&tas__SetEnabledTLSVersionsResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__SetEnabledTLSVersionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__SetEnabledTLSVersionsResponse.soap_get(soap, "tas:SetEnabledTLSVersionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetEnabledTLSVersions(const char *endpoint, const char *soap_action, _tas__GetEnabledTLSVersions *tas__GetEnabledTLSVersions, _tas__GetEnabledTLSVersionsResponse &tas__GetEnabledTLSVersionsResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetEnabledTLSVersions soap_tmp___tas__GetEnabledTLSVersions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetEnabledTLSVersions";
	soap_tmp___tas__GetEnabledTLSVersions.tas__GetEnabledTLSVersions = tas__GetEnabledTLSVersions;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetEnabledTLSVersions(soap, &soap_tmp___tas__GetEnabledTLSVersions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetEnabledTLSVersions(soap, &soap_tmp___tas__GetEnabledTLSVersions, "-tas:GetEnabledTLSVersions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetEnabledTLSVersions(soap, &soap_tmp___tas__GetEnabledTLSVersions, "-tas:GetEnabledTLSVersions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetEnabledTLSVersionsResponse*>(&tas__GetEnabledTLSVersionsResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetEnabledTLSVersionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetEnabledTLSVersionsResponse.soap_get(soap, "tas:GetEnabledTLSVersionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::SetClientAuthenticationRequired(const char *endpoint, const char *soap_action, _tas__SetClientAuthenticationRequired *tas__SetClientAuthenticationRequired, _tas__SetClientAuthenticationRequiredResponse &tas__SetClientAuthenticationRequiredResponse)
{	struct soap *soap = this->soap;
	struct __tas__SetClientAuthenticationRequired soap_tmp___tas__SetClientAuthenticationRequired;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/SetClientAuthenticationRequired";
	soap_tmp___tas__SetClientAuthenticationRequired.tas__SetClientAuthenticationRequired = tas__SetClientAuthenticationRequired;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__SetClientAuthenticationRequired(soap, &soap_tmp___tas__SetClientAuthenticationRequired);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__SetClientAuthenticationRequired(soap, &soap_tmp___tas__SetClientAuthenticationRequired, "-tas:SetClientAuthenticationRequired", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__SetClientAuthenticationRequired(soap, &soap_tmp___tas__SetClientAuthenticationRequired, "-tas:SetClientAuthenticationRequired", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__SetClientAuthenticationRequiredResponse*>(&tas__SetClientAuthenticationRequiredResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__SetClientAuthenticationRequiredResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__SetClientAuthenticationRequiredResponse.soap_get(soap, "tas:SetClientAuthenticationRequiredResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetClientAuthenticationRequired(const char *endpoint, const char *soap_action, _tas__GetClientAuthenticationRequired *tas__GetClientAuthenticationRequired, _tas__GetClientAuthenticationRequiredResponse &tas__GetClientAuthenticationRequiredResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetClientAuthenticationRequired soap_tmp___tas__GetClientAuthenticationRequired;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetClientAuthenticationRequired";
	soap_tmp___tas__GetClientAuthenticationRequired.tas__GetClientAuthenticationRequired = tas__GetClientAuthenticationRequired;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetClientAuthenticationRequired(soap, &soap_tmp___tas__GetClientAuthenticationRequired);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetClientAuthenticationRequired(soap, &soap_tmp___tas__GetClientAuthenticationRequired, "-tas:GetClientAuthenticationRequired", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetClientAuthenticationRequired(soap, &soap_tmp___tas__GetClientAuthenticationRequired, "-tas:GetClientAuthenticationRequired", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetClientAuthenticationRequiredResponse*>(&tas__GetClientAuthenticationRequiredResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetClientAuthenticationRequiredResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetClientAuthenticationRequiredResponse.soap_get(soap, "tas:GetClientAuthenticationRequiredResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::SetCnMapsToUser(const char *endpoint, const char *soap_action, _tas__SetCnMapsToUser *tas__SetCnMapsToUser, _tas__SetCnMapsToUserResponse &tas__SetCnMapsToUserResponse)
{	struct soap *soap = this->soap;
	struct __tas__SetCnMapsToUser soap_tmp___tas__SetCnMapsToUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/SetCnMapsToUser";
	soap_tmp___tas__SetCnMapsToUser.tas__SetCnMapsToUser = tas__SetCnMapsToUser;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__SetCnMapsToUser(soap, &soap_tmp___tas__SetCnMapsToUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__SetCnMapsToUser(soap, &soap_tmp___tas__SetCnMapsToUser, "-tas:SetCnMapsToUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__SetCnMapsToUser(soap, &soap_tmp___tas__SetCnMapsToUser, "-tas:SetCnMapsToUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__SetCnMapsToUserResponse*>(&tas__SetCnMapsToUserResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__SetCnMapsToUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__SetCnMapsToUserResponse.soap_get(soap, "tas:SetCnMapsToUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetCnMapsToUser(const char *endpoint, const char *soap_action, _tas__GetCnMapsToUser *tas__GetCnMapsToUser, _tas__GetCnMapsToUserResponse &tas__GetCnMapsToUserResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetCnMapsToUser soap_tmp___tas__GetCnMapsToUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCnMapsToUser";
	soap_tmp___tas__GetCnMapsToUser.tas__GetCnMapsToUser = tas__GetCnMapsToUser;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetCnMapsToUser(soap, &soap_tmp___tas__GetCnMapsToUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetCnMapsToUser(soap, &soap_tmp___tas__GetCnMapsToUser, "-tas:GetCnMapsToUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetCnMapsToUser(soap, &soap_tmp___tas__GetCnMapsToUser, "-tas:GetCnMapsToUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetCnMapsToUserResponse*>(&tas__GetCnMapsToUserResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetCnMapsToUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetCnMapsToUserResponse.soap_get(soap, "tas:GetCnMapsToUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::AddCertPathValidationPolicyAssignment(const char *endpoint, const char *soap_action, _tas__AddCertPathValidationPolicyAssignment *tas__AddCertPathValidationPolicyAssignment, _tas__AddCertPathValidationPolicyAssignmentResponse &tas__AddCertPathValidationPolicyAssignmentResponse)
{	struct soap *soap = this->soap;
	struct __tas__AddCertPathValidationPolicyAssignment soap_tmp___tas__AddCertPathValidationPolicyAssignment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/AddCertPathValidationPolicyAssignment";
	soap_tmp___tas__AddCertPathValidationPolicyAssignment.tas__AddCertPathValidationPolicyAssignment = tas__AddCertPathValidationPolicyAssignment;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__AddCertPathValidationPolicyAssignment(soap, &soap_tmp___tas__AddCertPathValidationPolicyAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__AddCertPathValidationPolicyAssignment(soap, &soap_tmp___tas__AddCertPathValidationPolicyAssignment, "-tas:AddCertPathValidationPolicyAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__AddCertPathValidationPolicyAssignment(soap, &soap_tmp___tas__AddCertPathValidationPolicyAssignment, "-tas:AddCertPathValidationPolicyAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__AddCertPathValidationPolicyAssignmentResponse*>(&tas__AddCertPathValidationPolicyAssignmentResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__AddCertPathValidationPolicyAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__AddCertPathValidationPolicyAssignmentResponse.soap_get(soap, "tas:AddCertPathValidationPolicyAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::RemoveCertPathValidationPolicyAssignment(const char *endpoint, const char *soap_action, _tas__RemoveCertPathValidationPolicyAssignment *tas__RemoveCertPathValidationPolicyAssignment, _tas__RemoveCertPathValidationPolicyAssignmentResponse &tas__RemoveCertPathValidationPolicyAssignmentResponse)
{	struct soap *soap = this->soap;
	struct __tas__RemoveCertPathValidationPolicyAssignment soap_tmp___tas__RemoveCertPathValidationPolicyAssignment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/RemoveCertPathValidationPolicyAssignment";
	soap_tmp___tas__RemoveCertPathValidationPolicyAssignment.tas__RemoveCertPathValidationPolicyAssignment = tas__RemoveCertPathValidationPolicyAssignment;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__RemoveCertPathValidationPolicyAssignment(soap, &soap_tmp___tas__RemoveCertPathValidationPolicyAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__RemoveCertPathValidationPolicyAssignment(soap, &soap_tmp___tas__RemoveCertPathValidationPolicyAssignment, "-tas:RemoveCertPathValidationPolicyAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__RemoveCertPathValidationPolicyAssignment(soap, &soap_tmp___tas__RemoveCertPathValidationPolicyAssignment, "-tas:RemoveCertPathValidationPolicyAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__RemoveCertPathValidationPolicyAssignmentResponse*>(&tas__RemoveCertPathValidationPolicyAssignmentResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__RemoveCertPathValidationPolicyAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__RemoveCertPathValidationPolicyAssignmentResponse.soap_get(soap, "tas:RemoveCertPathValidationPolicyAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::ReplaceCertPathValidationPolicyAssignment(const char *endpoint, const char *soap_action, _tas__ReplaceCertPathValidationPolicyAssignment *tas__ReplaceCertPathValidationPolicyAssignment, _tas__ReplaceCertPathValidationPolicyAssignmentResponse &tas__ReplaceCertPathValidationPolicyAssignmentResponse)
{	struct soap *soap = this->soap;
	struct __tas__ReplaceCertPathValidationPolicyAssignment soap_tmp___tas__ReplaceCertPathValidationPolicyAssignment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/ReplaceCertPathValidationPolicyAssignment";
	soap_tmp___tas__ReplaceCertPathValidationPolicyAssignment.tas__ReplaceCertPathValidationPolicyAssignment = tas__ReplaceCertPathValidationPolicyAssignment;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__ReplaceCertPathValidationPolicyAssignment(soap, &soap_tmp___tas__ReplaceCertPathValidationPolicyAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__ReplaceCertPathValidationPolicyAssignment(soap, &soap_tmp___tas__ReplaceCertPathValidationPolicyAssignment, "-tas:ReplaceCertPathValidationPolicyAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__ReplaceCertPathValidationPolicyAssignment(soap, &soap_tmp___tas__ReplaceCertPathValidationPolicyAssignment, "-tas:ReplaceCertPathValidationPolicyAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__ReplaceCertPathValidationPolicyAssignmentResponse*>(&tas__ReplaceCertPathValidationPolicyAssignmentResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__ReplaceCertPathValidationPolicyAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__ReplaceCertPathValidationPolicyAssignmentResponse.soap_get(soap, "tas:ReplaceCertPathValidationPolicyAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetAssignedCertPathValidationPolicies(const char *endpoint, const char *soap_action, _tas__GetAssignedCertPathValidationPolicies *tas__GetAssignedCertPathValidationPolicies, _tas__GetAssignedCertPathValidationPoliciesResponse &tas__GetAssignedCertPathValidationPoliciesResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetAssignedCertPathValidationPolicies soap_tmp___tas__GetAssignedCertPathValidationPolicies;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAssignedCertPathValidationPolicies";
	soap_tmp___tas__GetAssignedCertPathValidationPolicies.tas__GetAssignedCertPathValidationPolicies = tas__GetAssignedCertPathValidationPolicies;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetAssignedCertPathValidationPolicies(soap, &soap_tmp___tas__GetAssignedCertPathValidationPolicies);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetAssignedCertPathValidationPolicies(soap, &soap_tmp___tas__GetAssignedCertPathValidationPolicies, "-tas:GetAssignedCertPathValidationPolicies", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetAssignedCertPathValidationPolicies(soap, &soap_tmp___tas__GetAssignedCertPathValidationPolicies, "-tas:GetAssignedCertPathValidationPolicies", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetAssignedCertPathValidationPoliciesResponse*>(&tas__GetAssignedCertPathValidationPoliciesResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetAssignedCertPathValidationPoliciesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetAssignedCertPathValidationPoliciesResponse.soap_get(soap, "tas:GetAssignedCertPathValidationPoliciesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::AddDot1XConfiguration(const char *endpoint, const char *soap_action, _tas__AddDot1XConfiguration *tas__AddDot1XConfiguration, _tas__AddDot1XConfigurationResponse &tas__AddDot1XConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __tas__AddDot1XConfiguration soap_tmp___tas__AddDot1XConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/AddDot1XConfiguration";
	soap_tmp___tas__AddDot1XConfiguration.tas__AddDot1XConfiguration = tas__AddDot1XConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__AddDot1XConfiguration(soap, &soap_tmp___tas__AddDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__AddDot1XConfiguration(soap, &soap_tmp___tas__AddDot1XConfiguration, "-tas:AddDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__AddDot1XConfiguration(soap, &soap_tmp___tas__AddDot1XConfiguration, "-tas:AddDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__AddDot1XConfigurationResponse*>(&tas__AddDot1XConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__AddDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__AddDot1XConfigurationResponse.soap_get(soap, "tas:AddDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetAllDot1XConfigurations(const char *endpoint, const char *soap_action, _tas__GetAllDot1XConfigurations *tas__GetAllDot1XConfigurations, _tas__GetAllDot1XConfigurationsResponse &tas__GetAllDot1XConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetAllDot1XConfigurations soap_tmp___tas__GetAllDot1XConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllDot1XConfigurations";
	soap_tmp___tas__GetAllDot1XConfigurations.tas__GetAllDot1XConfigurations = tas__GetAllDot1XConfigurations;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetAllDot1XConfigurations(soap, &soap_tmp___tas__GetAllDot1XConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetAllDot1XConfigurations(soap, &soap_tmp___tas__GetAllDot1XConfigurations, "-tas:GetAllDot1XConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetAllDot1XConfigurations(soap, &soap_tmp___tas__GetAllDot1XConfigurations, "-tas:GetAllDot1XConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetAllDot1XConfigurationsResponse*>(&tas__GetAllDot1XConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetAllDot1XConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetAllDot1XConfigurationsResponse.soap_get(soap, "tas:GetAllDot1XConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetDot1XConfiguration(const char *endpoint, const char *soap_action, _tas__GetDot1XConfiguration *tas__GetDot1XConfiguration, _tas__GetDot1XConfigurationResponse &tas__GetDot1XConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetDot1XConfiguration soap_tmp___tas__GetDot1XConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetDot1XConfiguration";
	soap_tmp___tas__GetDot1XConfiguration.tas__GetDot1XConfiguration = tas__GetDot1XConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetDot1XConfiguration(soap, &soap_tmp___tas__GetDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetDot1XConfiguration(soap, &soap_tmp___tas__GetDot1XConfiguration, "-tas:GetDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetDot1XConfiguration(soap, &soap_tmp___tas__GetDot1XConfiguration, "-tas:GetDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetDot1XConfigurationResponse*>(&tas__GetDot1XConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetDot1XConfigurationResponse.soap_get(soap, "tas:GetDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::DeleteDot1XConfiguration(const char *endpoint, const char *soap_action, _tas__DeleteDot1XConfiguration *tas__DeleteDot1XConfiguration, _tas__DeleteDot1XConfigurationResponse &tas__DeleteDot1XConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __tas__DeleteDot1XConfiguration soap_tmp___tas__DeleteDot1XConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteDot1XConfiguration";
	soap_tmp___tas__DeleteDot1XConfiguration.tas__DeleteDot1XConfiguration = tas__DeleteDot1XConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__DeleteDot1XConfiguration(soap, &soap_tmp___tas__DeleteDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__DeleteDot1XConfiguration(soap, &soap_tmp___tas__DeleteDot1XConfiguration, "-tas:DeleteDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__DeleteDot1XConfiguration(soap, &soap_tmp___tas__DeleteDot1XConfiguration, "-tas:DeleteDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__DeleteDot1XConfigurationResponse*>(&tas__DeleteDot1XConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__DeleteDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__DeleteDot1XConfigurationResponse.soap_get(soap, "tas:DeleteDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::SetNetworkInterfaceDot1XConfiguration(const char *endpoint, const char *soap_action, _tas__SetNetworkInterfaceDot1XConfiguration *tas__SetNetworkInterfaceDot1XConfiguration, _tas__SetNetworkInterfaceDot1XConfigurationResponse &tas__SetNetworkInterfaceDot1XConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __tas__SetNetworkInterfaceDot1XConfiguration soap_tmp___tas__SetNetworkInterfaceDot1XConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/SetNetworkInterfaceDot1XConfiguration";
	soap_tmp___tas__SetNetworkInterfaceDot1XConfiguration.tas__SetNetworkInterfaceDot1XConfiguration = tas__SetNetworkInterfaceDot1XConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__SetNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___tas__SetNetworkInterfaceDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__SetNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___tas__SetNetworkInterfaceDot1XConfiguration, "-tas:SetNetworkInterfaceDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__SetNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___tas__SetNetworkInterfaceDot1XConfiguration, "-tas:SetNetworkInterfaceDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__SetNetworkInterfaceDot1XConfigurationResponse*>(&tas__SetNetworkInterfaceDot1XConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__SetNetworkInterfaceDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__SetNetworkInterfaceDot1XConfigurationResponse.soap_get(soap, "tas:SetNetworkInterfaceDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::GetNetworkInterfaceDot1XConfiguration(const char *endpoint, const char *soap_action, _tas__GetNetworkInterfaceDot1XConfiguration *tas__GetNetworkInterfaceDot1XConfiguration, _tas__GetNetworkInterfaceDot1XConfigurationResponse &tas__GetNetworkInterfaceDot1XConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __tas__GetNetworkInterfaceDot1XConfiguration soap_tmp___tas__GetNetworkInterfaceDot1XConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetNetworkInterfaceDot1XConfiguration";
	soap_tmp___tas__GetNetworkInterfaceDot1XConfiguration.tas__GetNetworkInterfaceDot1XConfiguration = tas__GetNetworkInterfaceDot1XConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__GetNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___tas__GetNetworkInterfaceDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___tas__GetNetworkInterfaceDot1XConfiguration, "-tas:GetNetworkInterfaceDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___tas__GetNetworkInterfaceDot1XConfiguration, "-tas:GetNetworkInterfaceDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__GetNetworkInterfaceDot1XConfigurationResponse*>(&tas__GetNetworkInterfaceDot1XConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__GetNetworkInterfaceDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetNetworkInterfaceDot1XConfigurationResponse.soap_get(soap, "tas:GetNetworkInterfaceDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AdvancedSecurityServiceBindingProxy::DeleteNetworkInterfaceDot1XConfiguration(const char *endpoint, const char *soap_action, _tas__DeleteNetworkInterfaceDot1XConfiguration *tas__DeleteNetworkInterfaceDot1XConfiguration, _tas__DeleteNetworkInterfaceDot1XConfigurationResponse &tas__DeleteNetworkInterfaceDot1XConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __tas__DeleteNetworkInterfaceDot1XConfiguration soap_tmp___tas__DeleteNetworkInterfaceDot1XConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteNetworkInterfaceDot1XConfiguration";
	soap_tmp___tas__DeleteNetworkInterfaceDot1XConfiguration.tas__DeleteNetworkInterfaceDot1XConfiguration = tas__DeleteNetworkInterfaceDot1XConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___tas__DeleteNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___tas__DeleteNetworkInterfaceDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__DeleteNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___tas__DeleteNetworkInterfaceDot1XConfiguration, "-tas:DeleteNetworkInterfaceDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__DeleteNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___tas__DeleteNetworkInterfaceDot1XConfiguration, "-tas:DeleteNetworkInterfaceDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_tas__DeleteNetworkInterfaceDot1XConfigurationResponse*>(&tas__DeleteNetworkInterfaceDot1XConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	tas__DeleteNetworkInterfaceDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__DeleteNetworkInterfaceDot1XConfigurationResponse.soap_get(soap, "tas:DeleteNetworkInterfaceDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
