/* soapAccessRulesBindingProxy.cpp
   Generated by gSOAP 2.8.45 for onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapAccessRulesBindingProxy.h"

AccessRulesBindingProxy::AccessRulesBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	AccessRulesBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

AccessRulesBindingProxy::AccessRulesBindingProxy(const AccessRulesBindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

AccessRulesBindingProxy::AccessRulesBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	AccessRulesBindingProxy_init(_soap->imode, _soap->omode);
}

AccessRulesBindingProxy::AccessRulesBindingProxy(const char *endpoint)
{	this->soap = soap_new();
	this->soap_own = true;
	AccessRulesBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

AccessRulesBindingProxy::AccessRulesBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	AccessRulesBindingProxy_init(iomode, iomode);
}

AccessRulesBindingProxy::AccessRulesBindingProxy(const char *endpoint, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	AccessRulesBindingProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

AccessRulesBindingProxy::AccessRulesBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	AccessRulesBindingProxy_init(imode, omode);
}

AccessRulesBindingProxy::~AccessRulesBindingProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void AccessRulesBindingProxy::AccessRulesBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"wsa", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL, NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"ns1", "http://www.onvif.org/ver20/analytics/humanface", NULL, NULL},
        {"ns2", "http://www.onvif.org/ver20/analytics/humanbody", NULL, NULL},
        {"ns5", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"ns10", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"ns11", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {"ns12", "http://www.onvif.org/ver10/uplink/wsdl", NULL, NULL},
        {"ns13", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"ns14", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"ns3", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"ns4", "http://www.onvif.org/ver10/authenticationbehavior/wsdl", NULL, NULL},
        {"ns6", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"ns7", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"ns8", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"ns9", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"tas", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"tdn", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
        {"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

#ifndef WITH_PURE_VIRTUAL
AccessRulesBindingProxy *AccessRulesBindingProxy::copy()
{	AccessRulesBindingProxy *dup = SOAP_NEW_COPY(AccessRulesBindingProxy);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}
#endif

AccessRulesBindingProxy& AccessRulesBindingProxy::operator=(const AccessRulesBindingProxy& rhs)
{	if (this->soap_own)
		soap_free(this->soap);
	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
	return *this;
}

void AccessRulesBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void AccessRulesBindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	AccessRulesBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void AccessRulesBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void AccessRulesBindingProxy::soap_header(char *wsa__MessageID, struct wsa__Relationship *wsa__RelatesTo, struct wsa__EndpointReferenceType *wsa__From, struct wsa__EndpointReferenceType *wsa__ReplyTo, struct wsa__EndpointReferenceType *wsa__FaultTo, char *wsa__To, char *wsa__Action, struct wsdd__AppSequenceType *wsdd__AppSequence, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security)
{	::soap_header(this->soap);
	this->soap->header->wsa__MessageID = wsa__MessageID;
	this->soap->header->wsa__RelatesTo = wsa__RelatesTo;
	this->soap->header->wsa__From = wsa__From;
	this->soap->header->wsa__ReplyTo = wsa__ReplyTo;
	this->soap->header->wsa__FaultTo = wsa__FaultTo;
	this->soap->header->wsa__To = wsa__To;
	this->soap->header->wsa__Action = wsa__Action;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsse__Security = wsse__Security;
}

::SOAP_ENV__Header *AccessRulesBindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *AccessRulesBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *AccessRulesBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *AccessRulesBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int AccessRulesBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int AccessRulesBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void AccessRulesBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void AccessRulesBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *AccessRulesBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int AccessRulesBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _ns14__GetServiceCapabilities *ns14__GetServiceCapabilities, _ns14__GetServiceCapabilitiesResponse &ns14__GetServiceCapabilitiesResponse)
{	struct soap *soap = this->soap;
	struct __ns14__GetServiceCapabilities soap_tmp___ns14__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/GetServiceCapabilities";
	soap_tmp___ns14__GetServiceCapabilities.ns14__GetServiceCapabilities = ns14__GetServiceCapabilities;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns14__GetServiceCapabilities(soap, &soap_tmp___ns14__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns14__GetServiceCapabilities(soap, &soap_tmp___ns14__GetServiceCapabilities, "-ns14:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns14__GetServiceCapabilities(soap, &soap_tmp___ns14__GetServiceCapabilities, "-ns14:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns14__GetServiceCapabilitiesResponse*>(&ns14__GetServiceCapabilitiesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns14__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns14__GetServiceCapabilitiesResponse.soap_get(soap, "ns14:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessRulesBindingProxy::GetAccessProfileInfo(const char *endpoint, const char *soap_action, _ns14__GetAccessProfileInfo *ns14__GetAccessProfileInfo, _ns14__GetAccessProfileInfoResponse &ns14__GetAccessProfileInfoResponse)
{	struct soap *soap = this->soap;
	struct __ns14__GetAccessProfileInfo soap_tmp___ns14__GetAccessProfileInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileInfo";
	soap_tmp___ns14__GetAccessProfileInfo.ns14__GetAccessProfileInfo = ns14__GetAccessProfileInfo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns14__GetAccessProfileInfo(soap, &soap_tmp___ns14__GetAccessProfileInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns14__GetAccessProfileInfo(soap, &soap_tmp___ns14__GetAccessProfileInfo, "-ns14:GetAccessProfileInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns14__GetAccessProfileInfo(soap, &soap_tmp___ns14__GetAccessProfileInfo, "-ns14:GetAccessProfileInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns14__GetAccessProfileInfoResponse*>(&ns14__GetAccessProfileInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	ns14__GetAccessProfileInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns14__GetAccessProfileInfoResponse.soap_get(soap, "ns14:GetAccessProfileInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessRulesBindingProxy::GetAccessProfileInfoList(const char *endpoint, const char *soap_action, _ns14__GetAccessProfileInfoList *ns14__GetAccessProfileInfoList, _ns14__GetAccessProfileInfoListResponse &ns14__GetAccessProfileInfoListResponse)
{	struct soap *soap = this->soap;
	struct __ns14__GetAccessProfileInfoList soap_tmp___ns14__GetAccessProfileInfoList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileInfoList";
	soap_tmp___ns14__GetAccessProfileInfoList.ns14__GetAccessProfileInfoList = ns14__GetAccessProfileInfoList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns14__GetAccessProfileInfoList(soap, &soap_tmp___ns14__GetAccessProfileInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns14__GetAccessProfileInfoList(soap, &soap_tmp___ns14__GetAccessProfileInfoList, "-ns14:GetAccessProfileInfoList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns14__GetAccessProfileInfoList(soap, &soap_tmp___ns14__GetAccessProfileInfoList, "-ns14:GetAccessProfileInfoList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns14__GetAccessProfileInfoListResponse*>(&ns14__GetAccessProfileInfoListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns14__GetAccessProfileInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns14__GetAccessProfileInfoListResponse.soap_get(soap, "ns14:GetAccessProfileInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessRulesBindingProxy::GetAccessProfiles(const char *endpoint, const char *soap_action, _ns14__GetAccessProfiles *ns14__GetAccessProfiles, _ns14__GetAccessProfilesResponse &ns14__GetAccessProfilesResponse)
{	struct soap *soap = this->soap;
	struct __ns14__GetAccessProfiles soap_tmp___ns14__GetAccessProfiles;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfiles";
	soap_tmp___ns14__GetAccessProfiles.ns14__GetAccessProfiles = ns14__GetAccessProfiles;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns14__GetAccessProfiles(soap, &soap_tmp___ns14__GetAccessProfiles);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns14__GetAccessProfiles(soap, &soap_tmp___ns14__GetAccessProfiles, "-ns14:GetAccessProfiles", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns14__GetAccessProfiles(soap, &soap_tmp___ns14__GetAccessProfiles, "-ns14:GetAccessProfiles", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns14__GetAccessProfilesResponse*>(&ns14__GetAccessProfilesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns14__GetAccessProfilesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns14__GetAccessProfilesResponse.soap_get(soap, "ns14:GetAccessProfilesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessRulesBindingProxy::GetAccessProfileList(const char *endpoint, const char *soap_action, _ns14__GetAccessProfileList *ns14__GetAccessProfileList, _ns14__GetAccessProfileListResponse &ns14__GetAccessProfileListResponse)
{	struct soap *soap = this->soap;
	struct __ns14__GetAccessProfileList soap_tmp___ns14__GetAccessProfileList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileList";
	soap_tmp___ns14__GetAccessProfileList.ns14__GetAccessProfileList = ns14__GetAccessProfileList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns14__GetAccessProfileList(soap, &soap_tmp___ns14__GetAccessProfileList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns14__GetAccessProfileList(soap, &soap_tmp___ns14__GetAccessProfileList, "-ns14:GetAccessProfileList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns14__GetAccessProfileList(soap, &soap_tmp___ns14__GetAccessProfileList, "-ns14:GetAccessProfileList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns14__GetAccessProfileListResponse*>(&ns14__GetAccessProfileListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns14__GetAccessProfileListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns14__GetAccessProfileListResponse.soap_get(soap, "ns14:GetAccessProfileListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessRulesBindingProxy::CreateAccessProfile(const char *endpoint, const char *soap_action, _ns14__CreateAccessProfile *ns14__CreateAccessProfile, _ns14__CreateAccessProfileResponse &ns14__CreateAccessProfileResponse)
{	struct soap *soap = this->soap;
	struct __ns14__CreateAccessProfile soap_tmp___ns14__CreateAccessProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/CreateAccessProfile";
	soap_tmp___ns14__CreateAccessProfile.ns14__CreateAccessProfile = ns14__CreateAccessProfile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns14__CreateAccessProfile(soap, &soap_tmp___ns14__CreateAccessProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns14__CreateAccessProfile(soap, &soap_tmp___ns14__CreateAccessProfile, "-ns14:CreateAccessProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns14__CreateAccessProfile(soap, &soap_tmp___ns14__CreateAccessProfile, "-ns14:CreateAccessProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns14__CreateAccessProfileResponse*>(&ns14__CreateAccessProfileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns14__CreateAccessProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns14__CreateAccessProfileResponse.soap_get(soap, "ns14:CreateAccessProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessRulesBindingProxy::ModifyAccessProfile(const char *endpoint, const char *soap_action, _ns14__ModifyAccessProfile *ns14__ModifyAccessProfile, _ns14__ModifyAccessProfileResponse &ns14__ModifyAccessProfileResponse)
{	struct soap *soap = this->soap;
	struct __ns14__ModifyAccessProfile soap_tmp___ns14__ModifyAccessProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/ModifyAccessProfile";
	soap_tmp___ns14__ModifyAccessProfile.ns14__ModifyAccessProfile = ns14__ModifyAccessProfile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns14__ModifyAccessProfile(soap, &soap_tmp___ns14__ModifyAccessProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns14__ModifyAccessProfile(soap, &soap_tmp___ns14__ModifyAccessProfile, "-ns14:ModifyAccessProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns14__ModifyAccessProfile(soap, &soap_tmp___ns14__ModifyAccessProfile, "-ns14:ModifyAccessProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns14__ModifyAccessProfileResponse*>(&ns14__ModifyAccessProfileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns14__ModifyAccessProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns14__ModifyAccessProfileResponse.soap_get(soap, "ns14:ModifyAccessProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessRulesBindingProxy::SetAccessProfile(const char *endpoint, const char *soap_action, _ns14__SetAccessProfile *ns14__SetAccessProfile, _ns14__SetAccessProfileResponse &ns14__SetAccessProfileResponse)
{	struct soap *soap = this->soap;
	struct __ns14__SetAccessProfile soap_tmp___ns14__SetAccessProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/SetAccessProfile";
	soap_tmp___ns14__SetAccessProfile.ns14__SetAccessProfile = ns14__SetAccessProfile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns14__SetAccessProfile(soap, &soap_tmp___ns14__SetAccessProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns14__SetAccessProfile(soap, &soap_tmp___ns14__SetAccessProfile, "-ns14:SetAccessProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns14__SetAccessProfile(soap, &soap_tmp___ns14__SetAccessProfile, "-ns14:SetAccessProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns14__SetAccessProfileResponse*>(&ns14__SetAccessProfileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns14__SetAccessProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns14__SetAccessProfileResponse.soap_get(soap, "ns14:SetAccessProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessRulesBindingProxy::DeleteAccessProfile(const char *endpoint, const char *soap_action, _ns14__DeleteAccessProfile *ns14__DeleteAccessProfile, _ns14__DeleteAccessProfileResponse &ns14__DeleteAccessProfileResponse)
{	struct soap *soap = this->soap;
	struct __ns14__DeleteAccessProfile soap_tmp___ns14__DeleteAccessProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/DeleteAccessProfile";
	soap_tmp___ns14__DeleteAccessProfile.ns14__DeleteAccessProfile = ns14__DeleteAccessProfile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns14__DeleteAccessProfile(soap, &soap_tmp___ns14__DeleteAccessProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns14__DeleteAccessProfile(soap, &soap_tmp___ns14__DeleteAccessProfile, "-ns14:DeleteAccessProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns14__DeleteAccessProfile(soap, &soap_tmp___ns14__DeleteAccessProfile, "-ns14:DeleteAccessProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns14__DeleteAccessProfileResponse*>(&ns14__DeleteAccessProfileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns14__DeleteAccessProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns14__DeleteAccessProfileResponse.soap_get(soap, "ns14:DeleteAccessProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
