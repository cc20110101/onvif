/* soapActionEngineBindingProxy.cpp
   Generated by gSOAP 2.8.45 for onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapActionEngineBindingProxy.h"

ActionEngineBindingProxy::ActionEngineBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	ActionEngineBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

ActionEngineBindingProxy::ActionEngineBindingProxy(const ActionEngineBindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

ActionEngineBindingProxy::ActionEngineBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	ActionEngineBindingProxy_init(_soap->imode, _soap->omode);
}

ActionEngineBindingProxy::ActionEngineBindingProxy(const char *endpoint)
{	this->soap = soap_new();
	this->soap_own = true;
	ActionEngineBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

ActionEngineBindingProxy::ActionEngineBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	ActionEngineBindingProxy_init(iomode, iomode);
}

ActionEngineBindingProxy::ActionEngineBindingProxy(const char *endpoint, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	ActionEngineBindingProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

ActionEngineBindingProxy::ActionEngineBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	ActionEngineBindingProxy_init(imode, omode);
}

ActionEngineBindingProxy::~ActionEngineBindingProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void ActionEngineBindingProxy::ActionEngineBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"wsa", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL, NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"ns1", "http://www.onvif.org/ver20/analytics/humanface", NULL, NULL},
        {"ns2", "http://www.onvif.org/ver20/analytics/humanbody", NULL, NULL},
        {"ns5", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"ns10", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"ns11", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {"ns12", "http://www.onvif.org/ver10/uplink/wsdl", NULL, NULL},
        {"ns13", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"ns14", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"ns3", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"ns4", "http://www.onvif.org/ver10/authenticationbehavior/wsdl", NULL, NULL},
        {"ns6", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"ns7", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"ns8", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"ns9", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"tas", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"tdn", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
        {"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

#ifndef WITH_PURE_VIRTUAL
ActionEngineBindingProxy *ActionEngineBindingProxy::copy()
{	ActionEngineBindingProxy *dup = SOAP_NEW_COPY(ActionEngineBindingProxy);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}
#endif

ActionEngineBindingProxy& ActionEngineBindingProxy::operator=(const ActionEngineBindingProxy& rhs)
{	if (this->soap_own)
		soap_free(this->soap);
	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
	return *this;
}

void ActionEngineBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void ActionEngineBindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	ActionEngineBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void ActionEngineBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void ActionEngineBindingProxy::soap_header(char *wsa__MessageID, struct wsa__Relationship *wsa__RelatesTo, struct wsa__EndpointReferenceType *wsa__From, struct wsa__EndpointReferenceType *wsa__ReplyTo, struct wsa__EndpointReferenceType *wsa__FaultTo, char *wsa__To, char *wsa__Action, struct wsdd__AppSequenceType *wsdd__AppSequence, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security)
{	::soap_header(this->soap);
	this->soap->header->wsa__MessageID = wsa__MessageID;
	this->soap->header->wsa__RelatesTo = wsa__RelatesTo;
	this->soap->header->wsa__From = wsa__From;
	this->soap->header->wsa__ReplyTo = wsa__ReplyTo;
	this->soap->header->wsa__FaultTo = wsa__FaultTo;
	this->soap->header->wsa__To = wsa__To;
	this->soap->header->wsa__Action = wsa__Action;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsse__Security = wsse__Security;
}

::SOAP_ENV__Header *ActionEngineBindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *ActionEngineBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *ActionEngineBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *ActionEngineBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int ActionEngineBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int ActionEngineBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void ActionEngineBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void ActionEngineBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *ActionEngineBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int ActionEngineBindingProxy::GetSupportedActions(const char *endpoint, const char *soap_action, _ns3__GetSupportedActions *ns3__GetSupportedActions, _ns3__GetSupportedActionsResponse &ns3__GetSupportedActionsResponse)
{	struct soap *soap = this->soap;
	struct __ns3__GetSupportedActions soap_tmp___ns3__GetSupportedActions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/actionengine/wsdl/GetSupportedActions";
	soap_tmp___ns3__GetSupportedActions.ns3__GetSupportedActions = ns3__GetSupportedActions;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns3__GetSupportedActions(soap, &soap_tmp___ns3__GetSupportedActions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetSupportedActions(soap, &soap_tmp___ns3__GetSupportedActions, "-ns3:GetSupportedActions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetSupportedActions(soap, &soap_tmp___ns3__GetSupportedActions, "-ns3:GetSupportedActions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns3__GetSupportedActionsResponse*>(&ns3__GetSupportedActionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns3__GetSupportedActionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__GetSupportedActionsResponse.soap_get(soap, "ns3:GetSupportedActionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ActionEngineBindingProxy::GetActions(const char *endpoint, const char *soap_action, _ns3__GetActions *ns3__GetActions, _ns3__GetActionsResponse &ns3__GetActionsResponse)
{	struct soap *soap = this->soap;
	struct __ns3__GetActions soap_tmp___ns3__GetActions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/actionengine/wsdl/GetActions";
	soap_tmp___ns3__GetActions.ns3__GetActions = ns3__GetActions;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns3__GetActions(soap, &soap_tmp___ns3__GetActions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetActions(soap, &soap_tmp___ns3__GetActions, "-ns3:GetActions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetActions(soap, &soap_tmp___ns3__GetActions, "-ns3:GetActions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns3__GetActionsResponse*>(&ns3__GetActionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns3__GetActionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__GetActionsResponse.soap_get(soap, "ns3:GetActionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ActionEngineBindingProxy::CreateActions(const char *endpoint, const char *soap_action, _ns3__CreateActions *ns3__CreateActions, _ns3__CreateActionsResponse &ns3__CreateActionsResponse)
{	struct soap *soap = this->soap;
	struct __ns3__CreateActions soap_tmp___ns3__CreateActions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/actionengine/wsdl/CreateActions";
	soap_tmp___ns3__CreateActions.ns3__CreateActions = ns3__CreateActions;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns3__CreateActions(soap, &soap_tmp___ns3__CreateActions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__CreateActions(soap, &soap_tmp___ns3__CreateActions, "-ns3:CreateActions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__CreateActions(soap, &soap_tmp___ns3__CreateActions, "-ns3:CreateActions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns3__CreateActionsResponse*>(&ns3__CreateActionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns3__CreateActionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__CreateActionsResponse.soap_get(soap, "ns3:CreateActionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ActionEngineBindingProxy::DeleteActions(const char *endpoint, const char *soap_action, _ns3__DeleteActions *ns3__DeleteActions, _ns3__DeleteActionsResponse &ns3__DeleteActionsResponse)
{	struct soap *soap = this->soap;
	struct __ns3__DeleteActions soap_tmp___ns3__DeleteActions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/actionengine/wsdl/DeleteActions";
	soap_tmp___ns3__DeleteActions.ns3__DeleteActions = ns3__DeleteActions;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns3__DeleteActions(soap, &soap_tmp___ns3__DeleteActions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__DeleteActions(soap, &soap_tmp___ns3__DeleteActions, "-ns3:DeleteActions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__DeleteActions(soap, &soap_tmp___ns3__DeleteActions, "-ns3:DeleteActions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns3__DeleteActionsResponse*>(&ns3__DeleteActionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns3__DeleteActionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__DeleteActionsResponse.soap_get(soap, "ns3:DeleteActionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ActionEngineBindingProxy::ModifyActions(const char *endpoint, const char *soap_action, _ns3__ModifyActions *ns3__ModifyActions, _ns3__ModifyActionsResponse &ns3__ModifyActionsResponse)
{	struct soap *soap = this->soap;
	struct __ns3__ModifyActions soap_tmp___ns3__ModifyActions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/actionengine/wsdl/ModifyActions";
	soap_tmp___ns3__ModifyActions.ns3__ModifyActions = ns3__ModifyActions;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns3__ModifyActions(soap, &soap_tmp___ns3__ModifyActions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__ModifyActions(soap, &soap_tmp___ns3__ModifyActions, "-ns3:ModifyActions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__ModifyActions(soap, &soap_tmp___ns3__ModifyActions, "-ns3:ModifyActions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns3__ModifyActionsResponse*>(&ns3__ModifyActionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns3__ModifyActionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__ModifyActionsResponse.soap_get(soap, "ns3:ModifyActionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ActionEngineBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _ns3__GetServiceCapabilities *ns3__GetServiceCapabilities, _ns3__GetServiceCapabilitiesResponse &ns3__GetServiceCapabilitiesResponse)
{	struct soap *soap = this->soap;
	struct __ns3__GetServiceCapabilities soap_tmp___ns3__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/actionengine/wsdl/GetServiceCapabilities";
	soap_tmp___ns3__GetServiceCapabilities.ns3__GetServiceCapabilities = ns3__GetServiceCapabilities;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns3__GetServiceCapabilities(soap, &soap_tmp___ns3__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetServiceCapabilities(soap, &soap_tmp___ns3__GetServiceCapabilities, "-ns3:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetServiceCapabilities(soap, &soap_tmp___ns3__GetServiceCapabilities, "-ns3:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns3__GetServiceCapabilitiesResponse*>(&ns3__GetServiceCapabilitiesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns3__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__GetServiceCapabilitiesResponse.soap_get(soap, "ns3:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ActionEngineBindingProxy::GetActionTriggers(const char *endpoint, const char *soap_action, _ns3__GetActionTriggers *ns3__GetActionTriggers, _ns3__GetActionTriggersResponse &ns3__GetActionTriggersResponse)
{	struct soap *soap = this->soap;
	struct __ns3__GetActionTriggers soap_tmp___ns3__GetActionTriggers;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/actionengine/wsdl/GetActionTriggers";
	soap_tmp___ns3__GetActionTriggers.ns3__GetActionTriggers = ns3__GetActionTriggers;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns3__GetActionTriggers(soap, &soap_tmp___ns3__GetActionTriggers);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetActionTriggers(soap, &soap_tmp___ns3__GetActionTriggers, "-ns3:GetActionTriggers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetActionTriggers(soap, &soap_tmp___ns3__GetActionTriggers, "-ns3:GetActionTriggers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns3__GetActionTriggersResponse*>(&ns3__GetActionTriggersResponse)) // NULL ref?
		return soap_closesock(soap);
	ns3__GetActionTriggersResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__GetActionTriggersResponse.soap_get(soap, "ns3:GetActionTriggersResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ActionEngineBindingProxy::CreateActionTriggers(const char *endpoint, const char *soap_action, _ns3__CreateActionTriggers *ns3__CreateActionTriggers, _ns3__CreateActionTriggersResponse &ns3__CreateActionTriggersResponse)
{	struct soap *soap = this->soap;
	struct __ns3__CreateActionTriggers soap_tmp___ns3__CreateActionTriggers;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/actionengine/wsdl/CreateActionTriggers";
	soap_tmp___ns3__CreateActionTriggers.ns3__CreateActionTriggers = ns3__CreateActionTriggers;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns3__CreateActionTriggers(soap, &soap_tmp___ns3__CreateActionTriggers);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__CreateActionTriggers(soap, &soap_tmp___ns3__CreateActionTriggers, "-ns3:CreateActionTriggers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__CreateActionTriggers(soap, &soap_tmp___ns3__CreateActionTriggers, "-ns3:CreateActionTriggers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns3__CreateActionTriggersResponse*>(&ns3__CreateActionTriggersResponse)) // NULL ref?
		return soap_closesock(soap);
	ns3__CreateActionTriggersResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__CreateActionTriggersResponse.soap_get(soap, "ns3:CreateActionTriggersResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ActionEngineBindingProxy::DeleteActionTriggers(const char *endpoint, const char *soap_action, _ns3__DeleteActionTriggers *ns3__DeleteActionTriggers, _ns3__DeleteActionTriggersResponse &ns3__DeleteActionTriggersResponse)
{	struct soap *soap = this->soap;
	struct __ns3__DeleteActionTriggers soap_tmp___ns3__DeleteActionTriggers;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/actionengine/wsdl/DeleteActionTriggers";
	soap_tmp___ns3__DeleteActionTriggers.ns3__DeleteActionTriggers = ns3__DeleteActionTriggers;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns3__DeleteActionTriggers(soap, &soap_tmp___ns3__DeleteActionTriggers);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__DeleteActionTriggers(soap, &soap_tmp___ns3__DeleteActionTriggers, "-ns3:DeleteActionTriggers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__DeleteActionTriggers(soap, &soap_tmp___ns3__DeleteActionTriggers, "-ns3:DeleteActionTriggers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns3__DeleteActionTriggersResponse*>(&ns3__DeleteActionTriggersResponse)) // NULL ref?
		return soap_closesock(soap);
	ns3__DeleteActionTriggersResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__DeleteActionTriggersResponse.soap_get(soap, "ns3:DeleteActionTriggersResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ActionEngineBindingProxy::ModifyActionTriggers(const char *endpoint, const char *soap_action, _ns3__ModifyActionTriggers *ns3__ModifyActionTriggers, _ns3__ModifyActionTriggersResponse &ns3__ModifyActionTriggersResponse)
{	struct soap *soap = this->soap;
	struct __ns3__ModifyActionTriggers soap_tmp___ns3__ModifyActionTriggers;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/actionengine/wsdl/ModifyActionTriggers";
	soap_tmp___ns3__ModifyActionTriggers.ns3__ModifyActionTriggers = ns3__ModifyActionTriggers;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns3__ModifyActionTriggers(soap, &soap_tmp___ns3__ModifyActionTriggers);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__ModifyActionTriggers(soap, &soap_tmp___ns3__ModifyActionTriggers, "-ns3:ModifyActionTriggers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__ModifyActionTriggers(soap, &soap_tmp___ns3__ModifyActionTriggers, "-ns3:ModifyActionTriggers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns3__ModifyActionTriggersResponse*>(&ns3__ModifyActionTriggersResponse)) // NULL ref?
		return soap_closesock(soap);
	ns3__ModifyActionTriggersResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__ModifyActionTriggersResponse.soap_get(soap, "ns3:ModifyActionTriggersResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
