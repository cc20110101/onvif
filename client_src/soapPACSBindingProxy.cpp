/* soapPACSBindingProxy.cpp
   Generated by gSOAP 2.8.45 for onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapPACSBindingProxy.h"

PACSBindingProxy::PACSBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	PACSBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

PACSBindingProxy::PACSBindingProxy(const PACSBindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

PACSBindingProxy::PACSBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	PACSBindingProxy_init(_soap->imode, _soap->omode);
}

PACSBindingProxy::PACSBindingProxy(const char *endpoint)
{	this->soap = soap_new();
	this->soap_own = true;
	PACSBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

PACSBindingProxy::PACSBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	PACSBindingProxy_init(iomode, iomode);
}

PACSBindingProxy::PACSBindingProxy(const char *endpoint, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	PACSBindingProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

PACSBindingProxy::PACSBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	PACSBindingProxy_init(imode, omode);
}

PACSBindingProxy::~PACSBindingProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void PACSBindingProxy::PACSBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"wsa", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL, NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"ns1", "http://www.onvif.org/ver20/analytics/humanface", NULL, NULL},
        {"ns2", "http://www.onvif.org/ver20/analytics/humanbody", NULL, NULL},
        {"ns5", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"ns10", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"ns11", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {"ns12", "http://www.onvif.org/ver10/uplink/wsdl", NULL, NULL},
        {"ns13", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"ns14", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"ns3", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"ns4", "http://www.onvif.org/ver10/authenticationbehavior/wsdl", NULL, NULL},
        {"ns6", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"ns7", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"ns8", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"ns9", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"tas", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"tdn", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
        {"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

#ifndef WITH_PURE_VIRTUAL
PACSBindingProxy *PACSBindingProxy::copy()
{	PACSBindingProxy *dup = SOAP_NEW_COPY(PACSBindingProxy);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}
#endif

PACSBindingProxy& PACSBindingProxy::operator=(const PACSBindingProxy& rhs)
{	if (this->soap_own)
		soap_free(this->soap);
	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
	return *this;
}

void PACSBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void PACSBindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	PACSBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void PACSBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void PACSBindingProxy::soap_header(char *wsa__MessageID, struct wsa__Relationship *wsa__RelatesTo, struct wsa__EndpointReferenceType *wsa__From, struct wsa__EndpointReferenceType *wsa__ReplyTo, struct wsa__EndpointReferenceType *wsa__FaultTo, char *wsa__To, char *wsa__Action, struct wsdd__AppSequenceType *wsdd__AppSequence, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security)
{	::soap_header(this->soap);
	this->soap->header->wsa__MessageID = wsa__MessageID;
	this->soap->header->wsa__RelatesTo = wsa__RelatesTo;
	this->soap->header->wsa__From = wsa__From;
	this->soap->header->wsa__ReplyTo = wsa__ReplyTo;
	this->soap->header->wsa__FaultTo = wsa__FaultTo;
	this->soap->header->wsa__To = wsa__To;
	this->soap->header->wsa__Action = wsa__Action;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsse__Security = wsse__Security;
}

::SOAP_ENV__Header *PACSBindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *PACSBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *PACSBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *PACSBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int PACSBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int PACSBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void PACSBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void PACSBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *PACSBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int PACSBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _ns13__GetServiceCapabilities *ns13__GetServiceCapabilities, _ns13__GetServiceCapabilitiesResponse &ns13__GetServiceCapabilitiesResponse)
{	struct soap *soap = this->soap;
	struct __ns13__GetServiceCapabilities soap_tmp___ns13__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetServiceCapabilities";
	soap_tmp___ns13__GetServiceCapabilities.ns13__GetServiceCapabilities = ns13__GetServiceCapabilities;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__GetServiceCapabilities(soap, &soap_tmp___ns13__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetServiceCapabilities(soap, &soap_tmp___ns13__GetServiceCapabilities, "-ns13:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetServiceCapabilities(soap, &soap_tmp___ns13__GetServiceCapabilities, "-ns13:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__GetServiceCapabilitiesResponse*>(&ns13__GetServiceCapabilitiesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetServiceCapabilitiesResponse.soap_get(soap, "ns13:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::GetAccessPointInfoList(const char *endpoint, const char *soap_action, _ns13__GetAccessPointInfoList *ns13__GetAccessPointInfoList, _ns13__GetAccessPointInfoListResponse &ns13__GetAccessPointInfoListResponse)
{	struct soap *soap = this->soap;
	struct __ns13__GetAccessPointInfoList soap_tmp___ns13__GetAccessPointInfoList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointInfoList";
	soap_tmp___ns13__GetAccessPointInfoList.ns13__GetAccessPointInfoList = ns13__GetAccessPointInfoList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__GetAccessPointInfoList(soap, &soap_tmp___ns13__GetAccessPointInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetAccessPointInfoList(soap, &soap_tmp___ns13__GetAccessPointInfoList, "-ns13:GetAccessPointInfoList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetAccessPointInfoList(soap, &soap_tmp___ns13__GetAccessPointInfoList, "-ns13:GetAccessPointInfoList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__GetAccessPointInfoListResponse*>(&ns13__GetAccessPointInfoListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__GetAccessPointInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetAccessPointInfoListResponse.soap_get(soap, "ns13:GetAccessPointInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::GetAccessPointInfo(const char *endpoint, const char *soap_action, _ns13__GetAccessPointInfo *ns13__GetAccessPointInfo, _ns13__GetAccessPointInfoResponse &ns13__GetAccessPointInfoResponse)
{	struct soap *soap = this->soap;
	struct __ns13__GetAccessPointInfo soap_tmp___ns13__GetAccessPointInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointInfo";
	soap_tmp___ns13__GetAccessPointInfo.ns13__GetAccessPointInfo = ns13__GetAccessPointInfo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__GetAccessPointInfo(soap, &soap_tmp___ns13__GetAccessPointInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetAccessPointInfo(soap, &soap_tmp___ns13__GetAccessPointInfo, "-ns13:GetAccessPointInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetAccessPointInfo(soap, &soap_tmp___ns13__GetAccessPointInfo, "-ns13:GetAccessPointInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__GetAccessPointInfoResponse*>(&ns13__GetAccessPointInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__GetAccessPointInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetAccessPointInfoResponse.soap_get(soap, "ns13:GetAccessPointInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::GetAccessPointList(const char *endpoint, const char *soap_action, _ns13__GetAccessPointList *ns13__GetAccessPointList, _ns13__GetAccessPointListResponse &ns13__GetAccessPointListResponse)
{	struct soap *soap = this->soap;
	struct __ns13__GetAccessPointList soap_tmp___ns13__GetAccessPointList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointList";
	soap_tmp___ns13__GetAccessPointList.ns13__GetAccessPointList = ns13__GetAccessPointList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__GetAccessPointList(soap, &soap_tmp___ns13__GetAccessPointList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetAccessPointList(soap, &soap_tmp___ns13__GetAccessPointList, "-ns13:GetAccessPointList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetAccessPointList(soap, &soap_tmp___ns13__GetAccessPointList, "-ns13:GetAccessPointList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__GetAccessPointListResponse*>(&ns13__GetAccessPointListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__GetAccessPointListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetAccessPointListResponse.soap_get(soap, "ns13:GetAccessPointListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::GetAccessPoints(const char *endpoint, const char *soap_action, _ns13__GetAccessPoints *ns13__GetAccessPoints, _ns13__GetAccessPointsResponse &ns13__GetAccessPointsResponse)
{	struct soap *soap = this->soap;
	struct __ns13__GetAccessPoints soap_tmp___ns13__GetAccessPoints;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPoints";
	soap_tmp___ns13__GetAccessPoints.ns13__GetAccessPoints = ns13__GetAccessPoints;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__GetAccessPoints(soap, &soap_tmp___ns13__GetAccessPoints);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetAccessPoints(soap, &soap_tmp___ns13__GetAccessPoints, "-ns13:GetAccessPoints", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetAccessPoints(soap, &soap_tmp___ns13__GetAccessPoints, "-ns13:GetAccessPoints", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__GetAccessPointsResponse*>(&ns13__GetAccessPointsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__GetAccessPointsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetAccessPointsResponse.soap_get(soap, "ns13:GetAccessPointsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::CreateAccessPoint(const char *endpoint, const char *soap_action, _ns13__CreateAccessPoint *ns13__CreateAccessPoint, _ns13__CreateAccessPointResponse &ns13__CreateAccessPointResponse)
{	struct soap *soap = this->soap;
	struct __ns13__CreateAccessPoint soap_tmp___ns13__CreateAccessPoint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/CreateAccessPoint";
	soap_tmp___ns13__CreateAccessPoint.ns13__CreateAccessPoint = ns13__CreateAccessPoint;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__CreateAccessPoint(soap, &soap_tmp___ns13__CreateAccessPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__CreateAccessPoint(soap, &soap_tmp___ns13__CreateAccessPoint, "-ns13:CreateAccessPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__CreateAccessPoint(soap, &soap_tmp___ns13__CreateAccessPoint, "-ns13:CreateAccessPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__CreateAccessPointResponse*>(&ns13__CreateAccessPointResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__CreateAccessPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__CreateAccessPointResponse.soap_get(soap, "ns13:CreateAccessPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::SetAccessPoint(const char *endpoint, const char *soap_action, _ns13__SetAccessPoint *ns13__SetAccessPoint, _ns13__SetAccessPointResponse &ns13__SetAccessPointResponse)
{	struct soap *soap = this->soap;
	struct __ns13__SetAccessPoint soap_tmp___ns13__SetAccessPoint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/SetAccessPoint";
	soap_tmp___ns13__SetAccessPoint.ns13__SetAccessPoint = ns13__SetAccessPoint;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__SetAccessPoint(soap, &soap_tmp___ns13__SetAccessPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__SetAccessPoint(soap, &soap_tmp___ns13__SetAccessPoint, "-ns13:SetAccessPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__SetAccessPoint(soap, &soap_tmp___ns13__SetAccessPoint, "-ns13:SetAccessPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__SetAccessPointResponse*>(&ns13__SetAccessPointResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__SetAccessPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__SetAccessPointResponse.soap_get(soap, "ns13:SetAccessPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::ModifyAccessPoint(const char *endpoint, const char *soap_action, _ns13__ModifyAccessPoint *ns13__ModifyAccessPoint, _ns13__ModifyAccessPointResponse &ns13__ModifyAccessPointResponse)
{	struct soap *soap = this->soap;
	struct __ns13__ModifyAccessPoint soap_tmp___ns13__ModifyAccessPoint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/ModifyAccessPoint";
	soap_tmp___ns13__ModifyAccessPoint.ns13__ModifyAccessPoint = ns13__ModifyAccessPoint;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__ModifyAccessPoint(soap, &soap_tmp___ns13__ModifyAccessPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__ModifyAccessPoint(soap, &soap_tmp___ns13__ModifyAccessPoint, "-ns13:ModifyAccessPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__ModifyAccessPoint(soap, &soap_tmp___ns13__ModifyAccessPoint, "-ns13:ModifyAccessPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__ModifyAccessPointResponse*>(&ns13__ModifyAccessPointResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__ModifyAccessPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__ModifyAccessPointResponse.soap_get(soap, "ns13:ModifyAccessPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::DeleteAccessPoint(const char *endpoint, const char *soap_action, _ns13__DeleteAccessPoint *ns13__DeleteAccessPoint, _ns13__DeleteAccessPointResponse &ns13__DeleteAccessPointResponse)
{	struct soap *soap = this->soap;
	struct __ns13__DeleteAccessPoint soap_tmp___ns13__DeleteAccessPoint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/DeleteAccessPoint";
	soap_tmp___ns13__DeleteAccessPoint.ns13__DeleteAccessPoint = ns13__DeleteAccessPoint;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__DeleteAccessPoint(soap, &soap_tmp___ns13__DeleteAccessPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__DeleteAccessPoint(soap, &soap_tmp___ns13__DeleteAccessPoint, "-ns13:DeleteAccessPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__DeleteAccessPoint(soap, &soap_tmp___ns13__DeleteAccessPoint, "-ns13:DeleteAccessPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__DeleteAccessPointResponse*>(&ns13__DeleteAccessPointResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__DeleteAccessPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__DeleteAccessPointResponse.soap_get(soap, "ns13:DeleteAccessPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::SetAccessPointAuthenticationProfile(const char *endpoint, const char *soap_action, _ns13__SetAccessPointAuthenticationProfile *ns13__SetAccessPointAuthenticationProfile, _ns13__SetAccessPointAuthenticationProfileResponse &ns13__SetAccessPointAuthenticationProfileResponse)
{	struct soap *soap = this->soap;
	struct __ns13__SetAccessPointAuthenticationProfile soap_tmp___ns13__SetAccessPointAuthenticationProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/SetAccessPointAuthenticationProfile";
	soap_tmp___ns13__SetAccessPointAuthenticationProfile.ns13__SetAccessPointAuthenticationProfile = ns13__SetAccessPointAuthenticationProfile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__SetAccessPointAuthenticationProfile(soap, &soap_tmp___ns13__SetAccessPointAuthenticationProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__SetAccessPointAuthenticationProfile(soap, &soap_tmp___ns13__SetAccessPointAuthenticationProfile, "-ns13:SetAccessPointAuthenticationProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__SetAccessPointAuthenticationProfile(soap, &soap_tmp___ns13__SetAccessPointAuthenticationProfile, "-ns13:SetAccessPointAuthenticationProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__SetAccessPointAuthenticationProfileResponse*>(&ns13__SetAccessPointAuthenticationProfileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__SetAccessPointAuthenticationProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__SetAccessPointAuthenticationProfileResponse.soap_get(soap, "ns13:SetAccessPointAuthenticationProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::DeleteAccessPointAuthenticationProfile(const char *endpoint, const char *soap_action, _ns13__DeleteAccessPointAuthenticationProfile *ns13__DeleteAccessPointAuthenticationProfile, _ns13__DeleteAccessPointAuthenticationProfileResponse &ns13__DeleteAccessPointAuthenticationProfileResponse)
{	struct soap *soap = this->soap;
	struct __ns13__DeleteAccessPointAuthenticationProfile soap_tmp___ns13__DeleteAccessPointAuthenticationProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/DeleteAccessPointAuthenticationProfile";
	soap_tmp___ns13__DeleteAccessPointAuthenticationProfile.ns13__DeleteAccessPointAuthenticationProfile = ns13__DeleteAccessPointAuthenticationProfile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__DeleteAccessPointAuthenticationProfile(soap, &soap_tmp___ns13__DeleteAccessPointAuthenticationProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__DeleteAccessPointAuthenticationProfile(soap, &soap_tmp___ns13__DeleteAccessPointAuthenticationProfile, "-ns13:DeleteAccessPointAuthenticationProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__DeleteAccessPointAuthenticationProfile(soap, &soap_tmp___ns13__DeleteAccessPointAuthenticationProfile, "-ns13:DeleteAccessPointAuthenticationProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__DeleteAccessPointAuthenticationProfileResponse*>(&ns13__DeleteAccessPointAuthenticationProfileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__DeleteAccessPointAuthenticationProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__DeleteAccessPointAuthenticationProfileResponse.soap_get(soap, "ns13:DeleteAccessPointAuthenticationProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::GetAreaInfoList(const char *endpoint, const char *soap_action, _ns13__GetAreaInfoList *ns13__GetAreaInfoList, _ns13__GetAreaInfoListResponse &ns13__GetAreaInfoListResponse)
{	struct soap *soap = this->soap;
	struct __ns13__GetAreaInfoList soap_tmp___ns13__GetAreaInfoList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreaInfoList";
	soap_tmp___ns13__GetAreaInfoList.ns13__GetAreaInfoList = ns13__GetAreaInfoList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__GetAreaInfoList(soap, &soap_tmp___ns13__GetAreaInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetAreaInfoList(soap, &soap_tmp___ns13__GetAreaInfoList, "-ns13:GetAreaInfoList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetAreaInfoList(soap, &soap_tmp___ns13__GetAreaInfoList, "-ns13:GetAreaInfoList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__GetAreaInfoListResponse*>(&ns13__GetAreaInfoListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__GetAreaInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetAreaInfoListResponse.soap_get(soap, "ns13:GetAreaInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::GetAreaInfo(const char *endpoint, const char *soap_action, _ns13__GetAreaInfo *ns13__GetAreaInfo, _ns13__GetAreaInfoResponse &ns13__GetAreaInfoResponse)
{	struct soap *soap = this->soap;
	struct __ns13__GetAreaInfo soap_tmp___ns13__GetAreaInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreaInfo";
	soap_tmp___ns13__GetAreaInfo.ns13__GetAreaInfo = ns13__GetAreaInfo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__GetAreaInfo(soap, &soap_tmp___ns13__GetAreaInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetAreaInfo(soap, &soap_tmp___ns13__GetAreaInfo, "-ns13:GetAreaInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetAreaInfo(soap, &soap_tmp___ns13__GetAreaInfo, "-ns13:GetAreaInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__GetAreaInfoResponse*>(&ns13__GetAreaInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__GetAreaInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetAreaInfoResponse.soap_get(soap, "ns13:GetAreaInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::GetAreaList(const char *endpoint, const char *soap_action, _ns13__GetAreaList *ns13__GetAreaList, _ns13__GetAreaListResponse &ns13__GetAreaListResponse)
{	struct soap *soap = this->soap;
	struct __ns13__GetAreaList soap_tmp___ns13__GetAreaList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreaList";
	soap_tmp___ns13__GetAreaList.ns13__GetAreaList = ns13__GetAreaList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__GetAreaList(soap, &soap_tmp___ns13__GetAreaList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetAreaList(soap, &soap_tmp___ns13__GetAreaList, "-ns13:GetAreaList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetAreaList(soap, &soap_tmp___ns13__GetAreaList, "-ns13:GetAreaList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__GetAreaListResponse*>(&ns13__GetAreaListResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__GetAreaListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetAreaListResponse.soap_get(soap, "ns13:GetAreaListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::GetAreas(const char *endpoint, const char *soap_action, _ns13__GetAreas *ns13__GetAreas, _ns13__GetAreasResponse &ns13__GetAreasResponse)
{	struct soap *soap = this->soap;
	struct __ns13__GetAreas soap_tmp___ns13__GetAreas;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreas";
	soap_tmp___ns13__GetAreas.ns13__GetAreas = ns13__GetAreas;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__GetAreas(soap, &soap_tmp___ns13__GetAreas);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetAreas(soap, &soap_tmp___ns13__GetAreas, "-ns13:GetAreas", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetAreas(soap, &soap_tmp___ns13__GetAreas, "-ns13:GetAreas", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__GetAreasResponse*>(&ns13__GetAreasResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__GetAreasResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetAreasResponse.soap_get(soap, "ns13:GetAreasResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::CreateArea(const char *endpoint, const char *soap_action, _ns13__CreateArea *ns13__CreateArea, _ns13__CreateAreaResponse &ns13__CreateAreaResponse)
{	struct soap *soap = this->soap;
	struct __ns13__CreateArea soap_tmp___ns13__CreateArea;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/CreateArea";
	soap_tmp___ns13__CreateArea.ns13__CreateArea = ns13__CreateArea;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__CreateArea(soap, &soap_tmp___ns13__CreateArea);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__CreateArea(soap, &soap_tmp___ns13__CreateArea, "-ns13:CreateArea", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__CreateArea(soap, &soap_tmp___ns13__CreateArea, "-ns13:CreateArea", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__CreateAreaResponse*>(&ns13__CreateAreaResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__CreateAreaResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__CreateAreaResponse.soap_get(soap, "ns13:CreateAreaResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::SetArea(const char *endpoint, const char *soap_action, _ns13__SetArea *ns13__SetArea, _ns13__SetAreaResponse &ns13__SetAreaResponse)
{	struct soap *soap = this->soap;
	struct __ns13__SetArea soap_tmp___ns13__SetArea;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/SetArea";
	soap_tmp___ns13__SetArea.ns13__SetArea = ns13__SetArea;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__SetArea(soap, &soap_tmp___ns13__SetArea);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__SetArea(soap, &soap_tmp___ns13__SetArea, "-ns13:SetArea", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__SetArea(soap, &soap_tmp___ns13__SetArea, "-ns13:SetArea", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__SetAreaResponse*>(&ns13__SetAreaResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__SetAreaResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__SetAreaResponse.soap_get(soap, "ns13:SetAreaResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::ModifyArea(const char *endpoint, const char *soap_action, _ns13__ModifyArea *ns13__ModifyArea, _ns13__ModifyAreaResponse &ns13__ModifyAreaResponse)
{	struct soap *soap = this->soap;
	struct __ns13__ModifyArea soap_tmp___ns13__ModifyArea;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/ModifyArea";
	soap_tmp___ns13__ModifyArea.ns13__ModifyArea = ns13__ModifyArea;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__ModifyArea(soap, &soap_tmp___ns13__ModifyArea);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__ModifyArea(soap, &soap_tmp___ns13__ModifyArea, "-ns13:ModifyArea", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__ModifyArea(soap, &soap_tmp___ns13__ModifyArea, "-ns13:ModifyArea", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__ModifyAreaResponse*>(&ns13__ModifyAreaResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__ModifyAreaResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__ModifyAreaResponse.soap_get(soap, "ns13:ModifyAreaResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::DeleteArea(const char *endpoint, const char *soap_action, _ns13__DeleteArea *ns13__DeleteArea, _ns13__DeleteAreaResponse &ns13__DeleteAreaResponse)
{	struct soap *soap = this->soap;
	struct __ns13__DeleteArea soap_tmp___ns13__DeleteArea;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/DeleteArea";
	soap_tmp___ns13__DeleteArea.ns13__DeleteArea = ns13__DeleteArea;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__DeleteArea(soap, &soap_tmp___ns13__DeleteArea);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__DeleteArea(soap, &soap_tmp___ns13__DeleteArea, "-ns13:DeleteArea", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__DeleteArea(soap, &soap_tmp___ns13__DeleteArea, "-ns13:DeleteArea", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__DeleteAreaResponse*>(&ns13__DeleteAreaResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__DeleteAreaResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__DeleteAreaResponse.soap_get(soap, "ns13:DeleteAreaResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::GetAccessPointState(const char *endpoint, const char *soap_action, _ns13__GetAccessPointState *ns13__GetAccessPointState, _ns13__GetAccessPointStateResponse &ns13__GetAccessPointStateResponse)
{	struct soap *soap = this->soap;
	struct __ns13__GetAccessPointState soap_tmp___ns13__GetAccessPointState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointState";
	soap_tmp___ns13__GetAccessPointState.ns13__GetAccessPointState = ns13__GetAccessPointState;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__GetAccessPointState(soap, &soap_tmp___ns13__GetAccessPointState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetAccessPointState(soap, &soap_tmp___ns13__GetAccessPointState, "-ns13:GetAccessPointState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetAccessPointState(soap, &soap_tmp___ns13__GetAccessPointState, "-ns13:GetAccessPointState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__GetAccessPointStateResponse*>(&ns13__GetAccessPointStateResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__GetAccessPointStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetAccessPointStateResponse.soap_get(soap, "ns13:GetAccessPointStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::EnableAccessPoint(const char *endpoint, const char *soap_action, _ns13__EnableAccessPoint *ns13__EnableAccessPoint, _ns13__EnableAccessPointResponse &ns13__EnableAccessPointResponse)
{	struct soap *soap = this->soap;
	struct __ns13__EnableAccessPoint soap_tmp___ns13__EnableAccessPoint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/EnableAccessPoint";
	soap_tmp___ns13__EnableAccessPoint.ns13__EnableAccessPoint = ns13__EnableAccessPoint;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__EnableAccessPoint(soap, &soap_tmp___ns13__EnableAccessPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__EnableAccessPoint(soap, &soap_tmp___ns13__EnableAccessPoint, "-ns13:EnableAccessPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__EnableAccessPoint(soap, &soap_tmp___ns13__EnableAccessPoint, "-ns13:EnableAccessPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__EnableAccessPointResponse*>(&ns13__EnableAccessPointResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__EnableAccessPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__EnableAccessPointResponse.soap_get(soap, "ns13:EnableAccessPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::DisableAccessPoint(const char *endpoint, const char *soap_action, _ns13__DisableAccessPoint *ns13__DisableAccessPoint, _ns13__DisableAccessPointResponse &ns13__DisableAccessPointResponse)
{	struct soap *soap = this->soap;
	struct __ns13__DisableAccessPoint soap_tmp___ns13__DisableAccessPoint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/DisableAccessPoint";
	soap_tmp___ns13__DisableAccessPoint.ns13__DisableAccessPoint = ns13__DisableAccessPoint;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__DisableAccessPoint(soap, &soap_tmp___ns13__DisableAccessPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__DisableAccessPoint(soap, &soap_tmp___ns13__DisableAccessPoint, "-ns13:DisableAccessPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__DisableAccessPoint(soap, &soap_tmp___ns13__DisableAccessPoint, "-ns13:DisableAccessPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__DisableAccessPointResponse*>(&ns13__DisableAccessPointResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__DisableAccessPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__DisableAccessPointResponse.soap_get(soap, "ns13:DisableAccessPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::ExternalAuthorization(const char *endpoint, const char *soap_action, _ns13__ExternalAuthorization *ns13__ExternalAuthorization, _ns13__ExternalAuthorizationResponse &ns13__ExternalAuthorizationResponse)
{	struct soap *soap = this->soap;
	struct __ns13__ExternalAuthorization soap_tmp___ns13__ExternalAuthorization;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/ExternalAuthorization";
	soap_tmp___ns13__ExternalAuthorization.ns13__ExternalAuthorization = ns13__ExternalAuthorization;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns13__ExternalAuthorization(soap, &soap_tmp___ns13__ExternalAuthorization);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__ExternalAuthorization(soap, &soap_tmp___ns13__ExternalAuthorization, "-ns13:ExternalAuthorization", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__ExternalAuthorization(soap, &soap_tmp___ns13__ExternalAuthorization, "-ns13:ExternalAuthorization", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns13__ExternalAuthorizationResponse*>(&ns13__ExternalAuthorizationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns13__ExternalAuthorizationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__ExternalAuthorizationResponse.soap_get(soap, "ns13:ExternalAuthorizationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
